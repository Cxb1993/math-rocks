function analyze(method, analysis, iterationCount)
  setup;

  Pdyn = 2 * dlmread(File.join('+Test', 'Assets', '004.ptrace'), '', 1, 0).';

  leakage = LeakagePower.PolynomialRegression( ...
    'dynamicPower', Pdyn, ...
    'filename', File.join('+Test', 'Assets', 'inverter_45nm_L5_T1000.leak'), ...
    'order', [ 1, 2 ], ...
    'scale', [ 1, 1, 1; 1, 1, 1 ]);

  temperature = Temperature.(method).(analysis)( ...
    'floorplan', File.join('+Test', 'Assets', '004.flp'), ...
    'config', File.join('+Test', 'Assets', 'hotspot.config'), ...
    'line', 'sampling_intvl 1e-3', ...
    'leakage', leakage);

  fprintf('Running %d iterations...\n', iterationCount);
  time = tic;
  for i = 1:iterationCount
    [ T, output ] = temperature.compute(Pdyn);
  end
  time = toc(time) / iterationCount;
  fprintf('Average computational time: %.4f s\n', time);

  Utils.plotPowerTemperature(Pdyn, output.Pleak, ...
    T, temperature.samplingInterval);
end
