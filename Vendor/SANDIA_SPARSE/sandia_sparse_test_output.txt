>> cd product_factor
>> ls
cc_d1_o003_r.txt	dtable_header_read.m	product_factor.html	s_to_i4.m
cc_d1_o003_w.txt	dtable_header_write.m	product_factor.m	s_to_r8.m
cc_d1_o003_x.txt	dtable_write.m		product_r.txt		s_to_r8vec.m
ch_cap.m		factors.txt		product_rule_size.m	s_word_count.m
ch_eqi.m		file_column_count.m	product_w.txt		timestamp.m
ch_to_digit.m		file_row_count.m	product_x.txt		timestring.m
dtable_close_write.m	gl_d1_o002_r.txt	r8vec_direct_product.m
dtable_data_read.m	gl_d1_o002_w.txt	r8vec_direct_product2.m
dtable_data_write.m	gl_d1_o002_x.txt	s_len_trim.m

>> cd ../sandia_sparse
>> ls
abscissa_level_closed_nd.m	levels_index_ofn.m		r8_choose.m
abscissa_level_open_nd.m	levels_index_onn.m		r8_factorial.m
cc_abscissa.m			levels_index_own.m		r8_factorial2.m
cc_weights.m			levels_index_size.m		r8_huge.m
comp_next.m			levels_index_size_cfn.m		r8_mop.m
f1_abscissa.m			levels_index_size_ofn.m		r8vec_direct_product2.m
f1_weights.m			levels_index_size_onn.m		sandia_sparse.html
f2_abscissa.m			levels_index_size_own.m		sandia_sparse_m_src.tar.csh
f2_weights.m			levels_index_size_test.m	sandia_sparse_m_src.tar.gz
gh_abscissa.m			levels_index_test.m		sandia_sparse_test.m
gh_weights.m			lg_abscissa.m			sandia_sparse_test_output.txt
gl_abscissa.m			lg_weights.m			sparse_grid.m
gl_weights.m			monomial_integral_hermite.m	sparse_grid_cfn.m
gp_abscissa.m			monomial_integral_laguerre.m	sparse_grid_compute_test.m
gp_weights.m			monomial_integral_legendre.m	sparse_grid_monomial_test.m
i4_log_2.m			monomial_quadrature.m		sparse_grid_ofn.m
i4_modp.m			monomial_value.m		sparse_grid_onn.m
index_level_own.m		multigrid_index_cfn.m		sparse_grid_own.m
index_to_level_closed.m		multigrid_index_ofn.m		sparse_grid_weight_test.m
index_to_level_open.m		multigrid_index_onn.m		sparse_grid_weights_cfn.m
level_to_order_closed.m		multigrid_index_own.m		sparse_grid_weights_ofn.m
level_to_order_open.m		multigrid_scale_closed.m	timestamp.m
levels_index.m			multigrid_scale_open.m		vec_colex_next2.m
levels_index_cfn.m		product_weights.m

>> sandia_sparse_test
18-Apr-2009 10:40:42

SANDIA_SPARSE_TEST
  MATLAB version.

  Test the routines in the SANDIA_SPARSE library.

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 1

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1
   LEVEL_MAX
   ---------
       0         1
       1         3
       2         5
       3         9
       4        17
       5        33
       6        65
       7       129
       8       257
       9       513
      10      1025

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 1

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1         2         3         4         5         6
   LEVEL_MAX
   ---------
       0         1         1         1         1         1         1
       1         3         5         7         9        11        13
       2         5        13        25        41        61        85
       3         9        29        69       137       241       389
       4        17        65       177       401       801      1457
       5        33       145       441      1105      2433      4865
       6        65       321      1073      2929      6993     15121

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 1

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          6         7         8         9        10
   LEVEL_MAX
   ---------
       0         1         1         1         1         1
       1        13        15        17        19        21
       2        85       113       145       181       221
       3       389       589       849      1177      1581
       4      1457      2465      3937      6001      8801

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 1

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:        100
   LEVEL_MAX
   ---------
       0         1
       1       201
       2     20201

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 2

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1
   LEVEL_MAX
   ---------
       0         1
       1         3
       2         7
       3        15
       4        31
       5        63
       6       127
       7       255
       8       511
       9      1023
      10      2047

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 2

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1         2         3         4         5         6
   LEVEL_MAX
   ---------
       0         1         1         1         1         1         1
       1         3         5         7         9        11        13
       2         7        17        31        49        71        97
       3        15        49       111       209       351       545
       4        31       129       351       769      1471      2561
       5        63       321      1023      2561      5503     10625
       6       127       769      2815      7937     18943     40193

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 2

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          6         7         8         9        10
   LEVEL_MAX
   ---------
       0         1         1         1         1         1
       1        13        15        17        19        21
       2        97       127       161       199       241
       3       545       799      1121      1519      2001
       4      2561      4159      6401      9439     13441

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 2

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:        100
   LEVEL_MAX
   ---------
       0         1
       1       201
       2     20401

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 5

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1
   LEVEL_MAX
   ---------
       0         1
       1         3
       2         7
       3        15
       4        31
       5        63
       6       127
       7       255
       8       511
       9      1023
      10      2047

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 5

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1         2         3         4         5         6
   LEVEL_MAX
   ---------
       0         1         1         1         1         1         1
       1         3         5         7         9        11        13
       2         7        21        37        57        81       109
       3        15        73       159       289       471       713
       4        31       225       597      1265      2341      3953
       5        63       637      2031      4969     10363     19397
       6       127      1693      6405     17945     41913     86517

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 5

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          6         7         8         9        10
   LEVEL_MAX
   ---------
       0         1         1         1         1         1
       1        13        15        17        19        21
       2       109       141       177       217       261
       3       713      1023      1409      1879      2441
       4      3953      6245      9377     13525     18881

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 5

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:        100
   LEVEL_MAX
   ---------
       0         1
       1       201
       2     20601

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 7

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1
   LEVEL_MAX
   ---------
       0         1
       1         3
       2         7
       3        15
       4        31
       5        63
       6       127
       7       255
       8       511
       9      1023
      10      2047

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 7

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          1         2         3         4         5         6
   LEVEL_MAX
   ---------
       0         1         1         1         1         1         1
       1         3         7        10        13        16        19
       2         7        29        58        95       141       196
       3        15        95       255       515       906      1456
       4        31       273       945      2309      4746      8722
       5        63       723      3120      9065     21503     44758
       6       127      1813      9484     32259     87358    204203

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 7

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:          6         7         8         9        10
   LEVEL_MAX
   ---------
       0         1         1         1         1         1
       1        19        22        25        28        31
       2       196       260       333       415       506
       3      1456      2192      3141      4330      5786
       4      8722     14778     23535     35695     52041

LEVELS_INDEX_SIZE_TEST
  LEVELS_INDEX_SIZE returns the number of distinct
  points in a sparse grid derived from a 1D rule.

  We are looking at rules like rule 7

  Each sparse grid is of spatial dimension DIM,
  and is made up of product grids such that
  LEVEL_MIN <= LEVEL <= LEVEL_MAX.

   DIM:        100
   LEVEL_MAX
   ---------
       0         1
       1       301
       2     45551

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  Unique points in the grid = 5

 Point     Grid indices:
           Grid bases:

     1       1     1
             1     1
     2       0     1
             3     1
     3       2     1
             3     1
     4       1     0
             1     3
     5       1     2
             1     3

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  Unique points in the grid = 29

 Point     Grid indices:
           Grid bases:

     1       4     4
             1     1
     2       0     4
             3     1
     3       8     4
             3     1
     4       4     0
             1     3
     5       4     8
             1     3
     6       2     4
             5     1
     7       6     4
             5     1
     8       0     0
             3     3
     9       8     0
             3     3
    10       0     8
             3     3
    11       8     8
             3     3
    12       4     2
             1     5
    13       4     6
             1     5
    14       1     4
             9     1
    15       3     4
             9     1
    16       5     4
             9     1
    17       7     4
             9     1
    18       2     0
             5     3
    19       6     0
             5     3
    20       2     8
             5     3
    21       6     8
             5     3
    22       0     2
             3     5
    23       8     2
             3     5
    24       0     6
             3     5
    25       8     6
             3     5
    26       4     1
             1     9
    27       4     3
             1     9
    28       4     5
             1     9
    29       4     7
             1     9

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  Unique points in the grid = 1

 Point     Grid indices:
           Grid bases:

     1       0     0     0
             1     1     1

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 25

 Point     Grid indices:
           Grid bases:

     1       2     2     2
             1     1     1
     2       0     2     2
             3     1     1
     3       4     2     2
             3     1     1
     4       2     0     2
             1     3     1
     5       2     4     2
             1     3     1
     6       2     2     0
             1     1     3
     7       2     2     4
             1     1     3
     8       1     2     2
             5     1     1
     9       3     2     2
             5     1     1
    10       0     0     2
             3     3     1
    11       4     0     2
             3     3     1
    12       0     4     2
             3     3     1
    13       4     4     2
             3     3     1
    14       2     1     2
             1     5     1
    15       2     3     2
             1     5     1
    16       0     2     0
             3     1     3
    17       4     2     0
             3     1     3
    18       0     2     4
             3     1     3
    19       4     2     4
             3     1     3
    20       2     0     0
             1     3     3
    21       2     4     0
             1     3     3
    22       2     0     4
             1     3     3
    23       2     4     4
             1     3     3
    24       2     2     1
             1     1     5
    25       2     2     3
             1     1     5

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 1

  Spatial dimension DIM_NUM = 6
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 85

 Point     Grid indices:
           Grid bases:

     1       2     2     2     2     2     2
             1     1     1     1     1     1
     2       0     2     2     2     2     2
             3     1     1     1     1     1
     3       4     2     2     2     2     2
             3     1     1     1     1     1
     4       2     0     2     2     2     2
             1     3     1     1     1     1
     5       2     4     2     2     2     2
             1     3     1     1     1     1
     6       2     2     0     2     2     2
             1     1     3     1     1     1
     7       2     2     4     2     2     2
             1     1     3     1     1     1
     8       2     2     2     0     2     2
             1     1     1     3     1     1
     9       2     2     2     4     2     2
             1     1     1     3     1     1
    10       2     2     2     2     0     2
             1     1     1     1     3     1
    11       2     2     2     2     4     2
             1     1     1     1     3     1
    12       2     2     2     2     2     0
             1     1     1     1     1     3
    13       2     2     2     2     2     4
             1     1     1     1     1     3
    14       1     2     2     2     2     2
             5     1     1     1     1     1
    15       3     2     2     2     2     2
             5     1     1     1     1     1
    16       0     0     2     2     2     2
             3     3     1     1     1     1
    17       4     0     2     2     2     2
             3     3     1     1     1     1
    18       0     4     2     2     2     2
             3     3     1     1     1     1
    19       4     4     2     2     2     2
             3     3     1     1     1     1
    20       2     1     2     2     2     2
             1     5     1     1     1     1
    21       2     3     2     2     2     2
             1     5     1     1     1     1
    22       0     2     0     2     2     2
             3     1     3     1     1     1
    23       4     2     0     2     2     2
             3     1     3     1     1     1
    24       0     2     4     2     2     2
             3     1     3     1     1     1
    25       4     2     4     2     2     2
             3     1     3     1     1     1
    26       2     0     0     2     2     2
             1     3     3     1     1     1
    27       2     4     0     2     2     2
             1     3     3     1     1     1
    28       2     0     4     2     2     2
             1     3     3     1     1     1
    29       2     4     4     2     2     2
             1     3     3     1     1     1
    30       2     2     1     2     2     2
             1     1     5     1     1     1
    31       2     2     3     2     2     2
             1     1     5     1     1     1
    32       0     2     2     0     2     2
             3     1     1     3     1     1
    33       4     2     2     0     2     2
             3     1     1     3     1     1
    34       0     2     2     4     2     2
             3     1     1     3     1     1
    35       4     2     2     4     2     2
             3     1     1     3     1     1
    36       2     0     2     0     2     2
             1     3     1     3     1     1
    37       2     4     2     0     2     2
             1     3     1     3     1     1
    38       2     0     2     4     2     2
             1     3     1     3     1     1
    39       2     4     2     4     2     2
             1     3     1     3     1     1
    40       2     2     0     0     2     2
             1     1     3     3     1     1
    41       2     2     4     0     2     2
             1     1     3     3     1     1
    42       2     2     0     4     2     2
             1     1     3     3     1     1
    43       2     2     4     4     2     2
             1     1     3     3     1     1
    44       2     2     2     1     2     2
             1     1     1     5     1     1
    45       2     2     2     3     2     2
             1     1     1     5     1     1
    46       0     2     2     2     0     2
             3     1     1     1     3     1
    47       4     2     2     2     0     2
             3     1     1     1     3     1
    48       0     2     2     2     4     2
             3     1     1     1     3     1
    49       4     2     2     2     4     2
             3     1     1     1     3     1
    50       2     0     2     2     0     2
             1     3     1     1     3     1
    51       2     4     2     2     0     2
             1     3     1     1     3     1
    52       2     0     2     2     4     2
             1     3     1     1     3     1
    53       2     4     2     2     4     2
             1     3     1     1     3     1
    54       2     2     0     2     0     2
             1     1     3     1     3     1
    55       2     2     4     2     0     2
             1     1     3     1     3     1
    56       2     2     0     2     4     2
             1     1     3     1     3     1
    57       2     2     4     2     4     2
             1     1     3     1     3     1
    58       2     2     2     0     0     2
             1     1     1     3     3     1
    59       2     2     2     4     0     2
             1     1     1     3     3     1
    60       2     2     2     0     4     2
             1     1     1     3     3     1
    61       2     2     2     4     4     2
             1     1     1     3     3     1
    62       2     2     2     2     1     2
             1     1     1     1     5     1
    63       2     2     2     2     3     2
             1     1     1     1     5     1
    64       0     2     2     2     2     0
             3     1     1     1     1     3
    65       4     2     2     2     2     0
             3     1     1     1     1     3
    66       0     2     2     2     2     4
             3     1     1     1     1     3
    67       4     2     2     2     2     4
             3     1     1     1     1     3
    68       2     0     2     2     2     0
             1     3     1     1     1     3
    69       2     4     2     2     2     0
             1     3     1     1     1     3
    70       2     0     2     2     2     4
             1     3     1     1     1     3
    71       2     4     2     2     2     4
             1     3     1     1     1     3
    72       2     2     0     2     2     0
             1     1     3     1     1     3
    73       2     2     4     2     2     0
             1     1     3     1     1     3
    74       2     2     0     2     2     4
             1     1     3     1     1     3
    75       2     2     4     2     2     4
             1     1     3     1     1     3
    76       2     2     2     0     2     0
             1     1     1     3     1     3
    77       2     2     2     4     2     0
             1     1     1     3     1     3
    78       2     2     2     0     2     4
             1     1     1     3     1     3
    79       2     2     2     4     2     4
             1     1     1     3     1     3
    80       2     2     2     2     0     0
             1     1     1     1     3     3
    81       2     2     2     2     4     0
             1     1     1     1     3     3
    82       2     2     2     2     0     4
             1     1     1     1     3     3
    83       2     2     2     2     4     4
             1     1     1     1     3     3
    84       2     2     2     2     2     1
             1     1     1     1     1     5
    85       2     2     2     2     2     3
             1     1     1     1     1     5

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 2

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  Unique points in the grid = 5

 Point     Grid indices:
           Grid bases:

     1       2     2
             1     1
     2       1     2
             3     1
     3       3     2
             3     1
     4       2     1
             1     3
     5       2     3
             1     3

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 2

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  Unique points in the grid = 49

 Point     Grid indices:
           Grid bases:

     1       8     8
             1     1
     2       4     8
             3     1
     3      12     8
             3     1
     4       8     4
             1     3
     5       8    12
             1     3
     6       2     8
             7     1
     7       6     8
             7     1
     8      10     8
             7     1
     9      14     8
             7     1
    10       4     4
             3     3
    11      12     4
             3     3
    12       4    12
             3     3
    13      12    12
             3     3
    14       8     2
             1     7
    15       8     6
             1     7
    16       8    10
             1     7
    17       8    14
             1     7
    18       1     8
            15     1
    19       3     8
            15     1
    20       5     8
            15     1
    21       7     8
            15     1
    22       9     8
            15     1
    23      11     8
            15     1
    24      13     8
            15     1
    25      15     8
            15     1
    26       2     4
             7     3
    27       6     4
             7     3
    28      10     4
             7     3
    29      14     4
             7     3
    30       2    12
             7     3
    31       6    12
             7     3
    32      10    12
             7     3
    33      14    12
             7     3
    34       4     2
             3     7
    35      12     2
             3     7
    36       4     6
             3     7
    37      12     6
             3     7
    38       4    10
             3     7
    39      12    10
             3     7
    40       4    14
             3     7
    41      12    14
             3     7
    42       8     1
             1    15
    43       8     3
             1    15
    44       8     5
             1    15
    45       8     7
             1    15
    46       8     9
             1    15
    47       8    11
             1    15
    48       8    13
             1    15
    49       8    15
             1    15

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 2

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  Unique points in the grid = 1

 Point     Grid indices:
           Grid bases:

     1       1     1     1
             1     1     1

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 2

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 31

 Point     Grid indices:
           Grid bases:

     1       4     4     4
             1     1     1
     2       2     4     4
             3     1     1
     3       6     4     4
             3     1     1
     4       4     2     4
             1     3     1
     5       4     6     4
             1     3     1
     6       4     4     2
             1     1     3
     7       4     4     6
             1     1     3
     8       1     4     4
             7     1     1
     9       3     4     4
             7     1     1
    10       5     4     4
             7     1     1
    11       7     4     4
             7     1     1
    12       2     2     4
             3     3     1
    13       6     2     4
             3     3     1
    14       2     6     4
             3     3     1
    15       6     6     4
             3     3     1
    16       4     1     4
             1     7     1
    17       4     3     4
             1     7     1
    18       4     5     4
             1     7     1
    19       4     7     4
             1     7     1
    20       2     4     2
             3     1     3
    21       6     4     2
             3     1     3
    22       2     4     6
             3     1     3
    23       6     4     6
             3     1     3
    24       4     2     2
             1     3     3
    25       4     6     2
             1     3     3
    26       4     2     6
             1     3     3
    27       4     6     6
             1     3     3
    28       4     4     1
             1     1     7
    29       4     4     3
             1     1     7
    30       4     4     5
             1     1     7
    31       4     4     7
             1     1     7

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 2

  Spatial dimension DIM_NUM = 6
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 97

 Point     Grid indices:
           Grid bases:

     1       4     4     4     4     4     4
             1     1     1     1     1     1
     2       2     4     4     4     4     4
             3     1     1     1     1     1
     3       6     4     4     4     4     4
             3     1     1     1     1     1
     4       4     2     4     4     4     4
             1     3     1     1     1     1
     5       4     6     4     4     4     4
             1     3     1     1     1     1
     6       4     4     2     4     4     4
             1     1     3     1     1     1
     7       4     4     6     4     4     4
             1     1     3     1     1     1
     8       4     4     4     2     4     4
             1     1     1     3     1     1
     9       4     4     4     6     4     4
             1     1     1     3     1     1
    10       4     4     4     4     2     4
             1     1     1     1     3     1
    11       4     4     4     4     6     4
             1     1     1     1     3     1
    12       4     4     4     4     4     2
             1     1     1     1     1     3
    13       4     4     4     4     4     6
             1     1     1     1     1     3
    14       1     4     4     4     4     4
             7     1     1     1     1     1
    15       3     4     4     4     4     4
             7     1     1     1     1     1
    16       5     4     4     4     4     4
             7     1     1     1     1     1
    17       7     4     4     4     4     4
             7     1     1     1     1     1
    18       2     2     4     4     4     4
             3     3     1     1     1     1
    19       6     2     4     4     4     4
             3     3     1     1     1     1
    20       2     6     4     4     4     4
             3     3     1     1     1     1
    21       6     6     4     4     4     4
             3     3     1     1     1     1
    22       4     1     4     4     4     4
             1     7     1     1     1     1
    23       4     3     4     4     4     4
             1     7     1     1     1     1
    24       4     5     4     4     4     4
             1     7     1     1     1     1
    25       4     7     4     4     4     4
             1     7     1     1     1     1
    26       2     4     2     4     4     4
             3     1     3     1     1     1
    27       6     4     2     4     4     4
             3     1     3     1     1     1
    28       2     4     6     4     4     4
             3     1     3     1     1     1
    29       6     4     6     4     4     4
             3     1     3     1     1     1
    30       4     2     2     4     4     4
             1     3     3     1     1     1
    31       4     6     2     4     4     4
             1     3     3     1     1     1
    32       4     2     6     4     4     4
             1     3     3     1     1     1
    33       4     6     6     4     4     4
             1     3     3     1     1     1
    34       4     4     1     4     4     4
             1     1     7     1     1     1
    35       4     4     3     4     4     4
             1     1     7     1     1     1
    36       4     4     5     4     4     4
             1     1     7     1     1     1
    37       4     4     7     4     4     4
             1     1     7     1     1     1
    38       2     4     4     2     4     4
             3     1     1     3     1     1
    39       6     4     4     2     4     4
             3     1     1     3     1     1
    40       2     4     4     6     4     4
             3     1     1     3     1     1
    41       6     4     4     6     4     4
             3     1     1     3     1     1
    42       4     2     4     2     4     4
             1     3     1     3     1     1
    43       4     6     4     2     4     4
             1     3     1     3     1     1
    44       4     2     4     6     4     4
             1     3     1     3     1     1
    45       4     6     4     6     4     4
             1     3     1     3     1     1
    46       4     4     2     2     4     4
             1     1     3     3     1     1
    47       4     4     6     2     4     4
             1     1     3     3     1     1
    48       4     4     2     6     4     4
             1     1     3     3     1     1
    49       4     4     6     6     4     4
             1     1     3     3     1     1
    50       4     4     4     1     4     4
             1     1     1     7     1     1
    51       4     4     4     3     4     4
             1     1     1     7     1     1
    52       4     4     4     5     4     4
             1     1     1     7     1     1
    53       4     4     4     7     4     4
             1     1     1     7     1     1
    54       2     4     4     4     2     4
             3     1     1     1     3     1
    55       6     4     4     4     2     4
             3     1     1     1     3     1
    56       2     4     4     4     6     4
             3     1     1     1     3     1
    57       6     4     4     4     6     4
             3     1     1     1     3     1
    58       4     2     4     4     2     4
             1     3     1     1     3     1
    59       4     6     4     4     2     4
             1     3     1     1     3     1
    60       4     2     4     4     6     4
             1     3     1     1     3     1
    61       4     6     4     4     6     4
             1     3     1     1     3     1
    62       4     4     2     4     2     4
             1     1     3     1     3     1
    63       4     4     6     4     2     4
             1     1     3     1     3     1
    64       4     4     2     4     6     4
             1     1     3     1     3     1
    65       4     4     6     4     6     4
             1     1     3     1     3     1
    66       4     4     4     2     2     4
             1     1     1     3     3     1
    67       4     4     4     6     2     4
             1     1     1     3     3     1
    68       4     4     4     2     6     4
             1     1     1     3     3     1
    69       4     4     4     6     6     4
             1     1     1     3     3     1
    70       4     4     4     4     1     4
             1     1     1     1     7     1
    71       4     4     4     4     3     4
             1     1     1     1     7     1
    72       4     4     4     4     5     4
             1     1     1     1     7     1
    73       4     4     4     4     7     4
             1     1     1     1     7     1
    74       2     4     4     4     4     2
             3     1     1     1     1     3
    75       6     4     4     4     4     2
             3     1     1     1     1     3
    76       2     4     4     4     4     6
             3     1     1     1     1     3
    77       6     4     4     4     4     6
             3     1     1     1     1     3
    78       4     2     4     4     4     2
             1     3     1     1     1     3
    79       4     6     4     4     4     2
             1     3     1     1     1     3
    80       4     2     4     4     4     6
             1     3     1     1     1     3
    81       4     6     4     4     4     6
             1     3     1     1     1     3
    82       4     4     2     4     4     2
             1     1     3     1     1     3
    83       4     4     6     4     4     2
             1     1     3     1     1     3
    84       4     4     2     4     4     6
             1     1     3     1     1     3
    85       4     4     6     4     4     6
             1     1     3     1     1     3
    86       4     4     4     2     4     2
             1     1     1     3     1     3
    87       4     4     4     6     4     2
             1     1     1     3     1     3
    88       4     4     4     2     4     6
             1     1     1     3     1     3
    89       4     4     4     6     4     6
             1     1     1     3     1     3
    90       4     4     4     4     2     2
             1     1     1     1     3     3
    91       4     4     4     4     6     2
             1     1     1     1     3     3
    92       4     4     4     4     2     6
             1     1     1     1     3     3
    93       4     4     4     4     6     6
             1     1     1     1     3     3
    94       4     4     4     4     4     1
             1     1     1     1     1     7
    95       4     4     4     4     4     3
             1     1     1     1     1     7
    96       4     4     4     4     4     5
             1     1     1     1     1     7
    97       4     4     4     4     4     7
             1     1     1     1     1     7

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  Unique points in the grid = 5

 Point     Grid indices:
           Grid bases:

     1       0     0
             0     0
     2      -1     0
             1     0
     3       1     0
             1     0
     4       0    -1
             0     1
     5       0     1
             0     1

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  Unique points in the grid = 73

 Point     Grid indices:
           Grid bases:

     1       0     0
             0     0
     2      -1     0
             1     0
     3       1     0
             1     0
     4       0    -1
             0     1
     5       0     1
             0     1
     6      -3     0
             3     0
     7      -2     0
             3     0
     8      -1     0
             3     0
     9       1     0
             3     0
    10       2     0
             3     0
    11       3     0
             3     0
    12      -1    -1
             1     1
    13       1    -1
             1     1
    14      -1     1
             1     1
    15       1     1
             1     1
    16       0    -3
             0     3
    17       0    -2
             0     3
    18       0    -1
             0     3
    19       0     1
             0     3
    20       0     2
             0     3
    21       0     3
             0     3
    22      -7     0
             7     0
    23      -6     0
             7     0
    24      -5     0
             7     0
    25      -4     0
             7     0
    26      -3     0
             7     0
    27      -2     0
             7     0
    28      -1     0
             7     0
    29       1     0
             7     0
    30       2     0
             7     0
    31       3     0
             7     0
    32       4     0
             7     0
    33       5     0
             7     0
    34       6     0
             7     0
    35       7     0
             7     0
    36      -3    -1
             3     1
    37      -2    -1
             3     1
    38      -1    -1
             3     1
    39       1    -1
             3     1
    40       2    -1
             3     1
    41       3    -1
             3     1
    42      -3     1
             3     1
    43      -2     1
             3     1
    44      -1     1
             3     1
    45       1     1
             3     1
    46       2     1
             3     1
    47       3     1
             3     1
    48      -1    -3
             1     3
    49       1    -3
             1     3
    50      -1    -2
             1     3
    51       1    -2
             1     3
    52      -1    -1
             1     3
    53       1    -1
             1     3
    54      -1     1
             1     3
    55       1     1
             1     3
    56      -1     2
             1     3
    57       1     2
             1     3
    58      -1     3
             1     3
    59       1     3
             1     3
    60       0    -7
             0     7
    61       0    -6
             0     7
    62       0    -5
             0     7
    63       0    -4
             0     7
    64       0    -3
             0     7
    65       0    -2
             0     7
    66       0    -1
             0     7
    67       0     1
             0     7
    68       0     2
             0     7
    69       0     3
             0     7
    70       0     4
             0     7
    71       0     5
             0     7
    72       0     6
             0     7
    73       0     7
             0     7

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  Unique points in the grid = 1

 Point     Grid indices:
           Grid bases:

     1       0     0     0
             0     0     0

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 37

 Point     Grid indices:
           Grid bases:

     1       0     0     0
             0     0     0
     2      -1     0     0
             1     0     0
     3       1     0     0
             1     0     0
     4       0    -1     0
             0     1     0
     5       0     1     0
             0     1     0
     6       0     0    -1
             0     0     1
     7       0     0     1
             0     0     1
     8      -3     0     0
             3     0     0
     9      -2     0     0
             3     0     0
    10      -1     0     0
             3     0     0
    11       1     0     0
             3     0     0
    12       2     0     0
             3     0     0
    13       3     0     0
             3     0     0
    14      -1    -1     0
             1     1     0
    15       1    -1     0
             1     1     0
    16      -1     1     0
             1     1     0
    17       1     1     0
             1     1     0
    18       0    -3     0
             0     3     0
    19       0    -2     0
             0     3     0
    20       0    -1     0
             0     3     0
    21       0     1     0
             0     3     0
    22       0     2     0
             0     3     0
    23       0     3     0
             0     3     0
    24      -1     0    -1
             1     0     1
    25       1     0    -1
             1     0     1
    26      -1     0     1
             1     0     1
    27       1     0     1
             1     0     1
    28       0    -1    -1
             0     1     1
    29       0     1    -1
             0     1     1
    30       0    -1     1
             0     1     1
    31       0     1     1
             0     1     1
    32       0     0    -3
             0     0     3
    33       0     0    -2
             0     0     3
    34       0     0    -1
             0     0     3
    35       0     0     1
             0     0     3
    36       0     0     2
             0     0     3
    37       0     0     3
             0     0     3

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 5

  Spatial dimension DIM_NUM = 6
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 109

 Point     Grid indices:
           Grid bases:

     1       0     0     0     0     0     0
             0     0     0     0     0     0
     2      -1     0     0     0     0     0
             1     0     0     0     0     0
     3       1     0     0     0     0     0
             1     0     0     0     0     0
     4       0    -1     0     0     0     0
             0     1     0     0     0     0
     5       0     1     0     0     0     0
             0     1     0     0     0     0
     6       0     0    -1     0     0     0
             0     0     1     0     0     0
     7       0     0     1     0     0     0
             0     0     1     0     0     0
     8       0     0     0    -1     0     0
             0     0     0     1     0     0
     9       0     0     0     1     0     0
             0     0     0     1     0     0
    10       0     0     0     0    -1     0
             0     0     0     0     1     0
    11       0     0     0     0     1     0
             0     0     0     0     1     0
    12       0     0     0     0     0    -1
             0     0     0     0     0     1
    13       0     0     0     0     0     1
             0     0     0     0     0     1
    14      -3     0     0     0     0     0
             3     0     0     0     0     0
    15      -2     0     0     0     0     0
             3     0     0     0     0     0
    16      -1     0     0     0     0     0
             3     0     0     0     0     0
    17       1     0     0     0     0     0
             3     0     0     0     0     0
    18       2     0     0     0     0     0
             3     0     0     0     0     0
    19       3     0     0     0     0     0
             3     0     0     0     0     0
    20      -1    -1     0     0     0     0
             1     1     0     0     0     0
    21       1    -1     0     0     0     0
             1     1     0     0     0     0
    22      -1     1     0     0     0     0
             1     1     0     0     0     0
    23       1     1     0     0     0     0
             1     1     0     0     0     0
    24       0    -3     0     0     0     0
             0     3     0     0     0     0
    25       0    -2     0     0     0     0
             0     3     0     0     0     0
    26       0    -1     0     0     0     0
             0     3     0     0     0     0
    27       0     1     0     0     0     0
             0     3     0     0     0     0
    28       0     2     0     0     0     0
             0     3     0     0     0     0
    29       0     3     0     0     0     0
             0     3     0     0     0     0
    30      -1     0    -1     0     0     0
             1     0     1     0     0     0
    31       1     0    -1     0     0     0
             1     0     1     0     0     0
    32      -1     0     1     0     0     0
             1     0     1     0     0     0
    33       1     0     1     0     0     0
             1     0     1     0     0     0
    34       0    -1    -1     0     0     0
             0     1     1     0     0     0
    35       0     1    -1     0     0     0
             0     1     1     0     0     0
    36       0    -1     1     0     0     0
             0     1     1     0     0     0
    37       0     1     1     0     0     0
             0     1     1     0     0     0
    38       0     0    -3     0     0     0
             0     0     3     0     0     0
    39       0     0    -2     0     0     0
             0     0     3     0     0     0
    40       0     0    -1     0     0     0
             0     0     3     0     0     0
    41       0     0     1     0     0     0
             0     0     3     0     0     0
    42       0     0     2     0     0     0
             0     0     3     0     0     0
    43       0     0     3     0     0     0
             0     0     3     0     0     0
    44      -1     0     0    -1     0     0
             1     0     0     1     0     0
    45       1     0     0    -1     0     0
             1     0     0     1     0     0
    46      -1     0     0     1     0     0
             1     0     0     1     0     0
    47       1     0     0     1     0     0
             1     0     0     1     0     0
    48       0    -1     0    -1     0     0
             0     1     0     1     0     0
    49       0     1     0    -1     0     0
             0     1     0     1     0     0
    50       0    -1     0     1     0     0
             0     1     0     1     0     0
    51       0     1     0     1     0     0
             0     1     0     1     0     0
    52       0     0    -1    -1     0     0
             0     0     1     1     0     0
    53       0     0     1    -1     0     0
             0     0     1     1     0     0
    54       0     0    -1     1     0     0
             0     0     1     1     0     0
    55       0     0     1     1     0     0
             0     0     1     1     0     0
    56       0     0     0    -3     0     0
             0     0     0     3     0     0
    57       0     0     0    -2     0     0
             0     0     0     3     0     0
    58       0     0     0    -1     0     0
             0     0     0     3     0     0
    59       0     0     0     1     0     0
             0     0     0     3     0     0
    60       0     0     0     2     0     0
             0     0     0     3     0     0
    61       0     0     0     3     0     0
             0     0     0     3     0     0
    62      -1     0     0     0    -1     0
             1     0     0     0     1     0
    63       1     0     0     0    -1     0
             1     0     0     0     1     0
    64      -1     0     0     0     1     0
             1     0     0     0     1     0
    65       1     0     0     0     1     0
             1     0     0     0     1     0
    66       0    -1     0     0    -1     0
             0     1     0     0     1     0
    67       0     1     0     0    -1     0
             0     1     0     0     1     0
    68       0    -1     0     0     1     0
             0     1     0     0     1     0
    69       0     1     0     0     1     0
             0     1     0     0     1     0
    70       0     0    -1     0    -1     0
             0     0     1     0     1     0
    71       0     0     1     0    -1     0
             0     0     1     0     1     0
    72       0     0    -1     0     1     0
             0     0     1     0     1     0
    73       0     0     1     0     1     0
             0     0     1     0     1     0
    74       0     0     0    -1    -1     0
             0     0     0     1     1     0
    75       0     0     0     1    -1     0
             0     0     0     1     1     0
    76       0     0     0    -1     1     0
             0     0     0     1     1     0
    77       0     0     0     1     1     0
             0     0     0     1     1     0
    78       0     0     0     0    -3     0
             0     0     0     0     3     0
    79       0     0     0     0    -2     0
             0     0     0     0     3     0
    80       0     0     0     0    -1     0
             0     0     0     0     3     0
    81       0     0     0     0     1     0
             0     0     0     0     3     0
    82       0     0     0     0     2     0
             0     0     0     0     3     0
    83       0     0     0     0     3     0
             0     0     0     0     3     0
    84      -1     0     0     0     0    -1
             1     0     0     0     0     1
    85       1     0     0     0     0    -1
             1     0     0     0     0     1
    86      -1     0     0     0     0     1
             1     0     0     0     0     1
    87       1     0     0     0     0     1
             1     0     0     0     0     1
    88       0    -1     0     0     0    -1
             0     1     0     0     0     1
    89       0     1     0     0     0    -1
             0     1     0     0     0     1
    90       0    -1     0     0     0     1
             0     1     0     0     0     1
    91       0     1     0     0     0     1
             0     1     0     0     0     1
    92       0     0    -1     0     0    -1
             0     0     1     0     0     1
    93       0     0     1     0     0    -1
             0     0     1     0     0     1
    94       0     0    -1     0     0     1
             0     0     1     0     0     1
    95       0     0     1     0     0     1
             0     0     1     0     0     1
    96       0     0     0    -1     0    -1
             0     0     0     1     0     1
    97       0     0     0     1     0    -1
             0     0     0     1     0     1
    98       0     0     0    -1     0     1
             0     0     0     1     0     1
    99       0     0     0     1     0     1
             0     0     0     1     0     1
   100       0     0     0     0    -1    -1
             0     0     0     0     1     1
   101       0     0     0     0     1    -1
             0     0     0     0     1     1
   102       0     0     0     0    -1     1
             0     0     0     0     1     1
   103       0     0     0     0     1     1
             0     0     0     0     1     1
   104       0     0     0     0     0    -3
             0     0     0     0     0     3
   105       0     0     0     0     0    -2
             0     0     0     0     0     3
   106       0     0     0     0     0    -1
             0     0     0     0     0     3
   107       0     0     0     0     0     1
             0     0     0     0     0     3
   108       0     0     0     0     0     2
             0     0     0     0     0     3
   109       0     0     0     0     0     3
             0     0     0     0     0     3

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  Unique points in the grid = 7

 Point     Grid indices:
           Grid bases:

     1       1     1
             1     1
     2       1     1
             3     1
     3       2     1
             3     1
     4       3     1
             3     1
     5       1     1
             1     3
     6       1     2
             1     3
     7       1     3
             1     3

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  Unique points in the grid = 95

 Point     Grid indices:
           Grid bases:

     1       1     1
             7     1
     2       2     1
             7     1
     3       3     1
             7     1
     4       4     1
             7     1
     5       5     1
             7     1
     6       6     1
             7     1
     7       7     1
             7     1
     8       1     1
             3     3
     9       2     1
             3     3
    10       3     1
             3     3
    11       1     2
             3     3
    12       2     2
             3     3
    13       3     2
             3     3
    14       1     3
             3     3
    15       2     3
             3     3
    16       3     3
             3     3
    17       1     1
             1     7
    18       1     2
             1     7
    19       1     3
             1     7
    20       1     4
             1     7
    21       1     5
             1     7
    22       1     6
             1     7
    23       1     7
             1     7
    24       1     1
            15     1
    25       2     1
            15     1
    26       3     1
            15     1
    27       4     1
            15     1
    28       5     1
            15     1
    29       6     1
            15     1
    30       7     1
            15     1
    31       8     1
            15     1
    32       9     1
            15     1
    33      10     1
            15     1
    34      11     1
            15     1
    35      12     1
            15     1
    36      13     1
            15     1
    37      14     1
            15     1
    38      15     1
            15     1
    39       1     1
             7     3
    40       2     1
             7     3
    41       3     1
             7     3
    42       4     1
             7     3
    43       5     1
             7     3
    44       6     1
             7     3
    45       7     1
             7     3
    46       1     2
             7     3
    47       2     2
             7     3
    48       3     2
             7     3
    49       4     2
             7     3
    50       5     2
             7     3
    51       6     2
             7     3
    52       7     2
             7     3
    53       1     3
             7     3
    54       2     3
             7     3
    55       3     3
             7     3
    56       4     3
             7     3
    57       5     3
             7     3
    58       6     3
             7     3
    59       7     3
             7     3
    60       1     1
             3     7
    61       2     1
             3     7
    62       3     1
             3     7
    63       1     2
             3     7
    64       2     2
             3     7
    65       3     2
             3     7
    66       1     3
             3     7
    67       2     3
             3     7
    68       3     3
             3     7
    69       1     4
             3     7
    70       2     4
             3     7
    71       3     4
             3     7
    72       1     5
             3     7
    73       2     5
             3     7
    74       3     5
             3     7
    75       1     6
             3     7
    76       2     6
             3     7
    77       3     6
             3     7
    78       1     7
             3     7
    79       2     7
             3     7
    80       3     7
             3     7
    81       1     1
             1    15
    82       1     2
             1    15
    83       1     3
             1    15
    84       1     4
             1    15
    85       1     5
             1    15
    86       1     6
             1    15
    87       1     7
             1    15
    88       1     8
             1    15
    89       1     9
             1    15
    90       1    10
             1    15
    91       1    11
             1    15
    92       1    12
             1    15
    93       1    13
             1    15
    94       1    14
             1    15
    95       1    15
             1    15

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 7

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  Unique points in the grid = 1

 Point     Grid indices:
           Grid bases:

     1       1     1     1
             1     1     1

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 7

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 58

 Point     Grid indices:
           Grid bases:

     1       1     1     1
             1     1     1
     2       1     1     1
             3     1     1
     3       2     1     1
             3     1     1
     4       3     1     1
             3     1     1
     5       1     1     1
             1     3     1
     6       1     2     1
             1     3     1
     7       1     3     1
             1     3     1
     8       1     1     1
             1     1     3
     9       1     1     2
             1     1     3
    10       1     1     3
             1     1     3
    11       1     1     1
             7     1     1
    12       2     1     1
             7     1     1
    13       3     1     1
             7     1     1
    14       4     1     1
             7     1     1
    15       5     1     1
             7     1     1
    16       6     1     1
             7     1     1
    17       7     1     1
             7     1     1
    18       1     1     1
             3     3     1
    19       2     1     1
             3     3     1
    20       3     1     1
             3     3     1
    21       1     2     1
             3     3     1
    22       2     2     1
             3     3     1
    23       3     2     1
             3     3     1
    24       1     3     1
             3     3     1
    25       2     3     1
             3     3     1
    26       3     3     1
             3     3     1
    27       1     1     1
             1     7     1
    28       1     2     1
             1     7     1
    29       1     3     1
             1     7     1
    30       1     4     1
             1     7     1
    31       1     5     1
             1     7     1
    32       1     6     1
             1     7     1
    33       1     7     1
             1     7     1
    34       1     1     1
             3     1     3
    35       2     1     1
             3     1     3
    36       3     1     1
             3     1     3
    37       1     1     2
             3     1     3
    38       2     1     2
             3     1     3
    39       3     1     2
             3     1     3
    40       1     1     3
             3     1     3
    41       2     1     3
             3     1     3
    42       3     1     3
             3     1     3
    43       1     1     1
             1     3     3
    44       1     2     1
             1     3     3
    45       1     3     1
             1     3     3
    46       1     1     2
             1     3     3
    47       1     2     2
             1     3     3
    48       1     3     2
             1     3     3
    49       1     1     3
             1     3     3
    50       1     2     3
             1     3     3
    51       1     3     3
             1     3     3
    52       1     1     1
             1     1     7
    53       1     1     2
             1     1     7
    54       1     1     3
             1     1     7
    55       1     1     4
             1     1     7
    56       1     1     5
             1     1     7
    57       1     1     6
             1     1     7
    58       1     1     7
             1     1     7

LEVELS_INDEX_TEST
  LEVELS_INDEX returns all grid indexes
  whose level value satisfies
    LEVEL_MIN <= LEVEL <= LEVEL_MAX.
  Here, LEVEL is the sum of the levels of the 1D rules,
  and the order of the rule is 2^LEVEL + 1.

  We are looking at rules like rule 7

  Spatial dimension DIM_NUM = 6
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  Unique points in the grid = 196

 Point     Grid indices:
           Grid bases:

     1       1     1     1     1     1     1
             1     1     1     1     1     1
     2       1     1     1     1     1     1
             3     1     1     1     1     1
     3       2     1     1     1     1     1
             3     1     1     1     1     1
     4       3     1     1     1     1     1
             3     1     1     1     1     1
     5       1     1     1     1     1     1
             1     3     1     1     1     1
     6       1     2     1     1     1     1
             1     3     1     1     1     1
     7       1     3     1     1     1     1
             1     3     1     1     1     1
     8       1     1     1     1     1     1
             1     1     3     1     1     1
     9       1     1     2     1     1     1
             1     1     3     1     1     1
    10       1     1     3     1     1     1
             1     1     3     1     1     1
    11       1     1     1     1     1     1
             1     1     1     3     1     1
    12       1     1     1     2     1     1
             1     1     1     3     1     1
    13       1     1     1     3     1     1
             1     1     1     3     1     1
    14       1     1     1     1     1     1
             1     1     1     1     3     1
    15       1     1     1     1     2     1
             1     1     1     1     3     1
    16       1     1     1     1     3     1
             1     1     1     1     3     1
    17       1     1     1     1     1     1
             1     1     1     1     1     3
    18       1     1     1     1     1     2
             1     1     1     1     1     3
    19       1     1     1     1     1     3
             1     1     1     1     1     3
    20       1     1     1     1     1     1
             7     1     1     1     1     1
    21       2     1     1     1     1     1
             7     1     1     1     1     1
    22       3     1     1     1     1     1
             7     1     1     1     1     1
    23       4     1     1     1     1     1
             7     1     1     1     1     1
    24       5     1     1     1     1     1
             7     1     1     1     1     1
    25       6     1     1     1     1     1
             7     1     1     1     1     1
    26       7     1     1     1     1     1
             7     1     1     1     1     1
    27       1     1     1     1     1     1
             3     3     1     1     1     1
    28       2     1     1     1     1     1
             3     3     1     1     1     1
    29       3     1     1     1     1     1
             3     3     1     1     1     1
    30       1     2     1     1     1     1
             3     3     1     1     1     1
    31       2     2     1     1     1     1
             3     3     1     1     1     1
    32       3     2     1     1     1     1
             3     3     1     1     1     1
    33       1     3     1     1     1     1
             3     3     1     1     1     1
    34       2     3     1     1     1     1
             3     3     1     1     1     1
    35       3     3     1     1     1     1
             3     3     1     1     1     1
    36       1     1     1     1     1     1
             1     7     1     1     1     1
    37       1     2     1     1     1     1
             1     7     1     1     1     1
    38       1     3     1     1     1     1
             1     7     1     1     1     1
    39       1     4     1     1     1     1
             1     7     1     1     1     1
    40       1     5     1     1     1     1
             1     7     1     1     1     1
    41       1     6     1     1     1     1
             1     7     1     1     1     1
    42       1     7     1     1     1     1
             1     7     1     1     1     1
    43       1     1     1     1     1     1
             3     1     3     1     1     1
    44       2     1     1     1     1     1
             3     1     3     1     1     1
    45       3     1     1     1     1     1
             3     1     3     1     1     1
    46       1     1     2     1     1     1
             3     1     3     1     1     1
    47       2     1     2     1     1     1
             3     1     3     1     1     1
    48       3     1     2     1     1     1
             3     1     3     1     1     1
    49       1     1     3     1     1     1
             3     1     3     1     1     1
    50       2     1     3     1     1     1
             3     1     3     1     1     1
    51       3     1     3     1     1     1
             3     1     3     1     1     1
    52       1     1     1     1     1     1
             1     3     3     1     1     1
    53       1     2     1     1     1     1
             1     3     3     1     1     1
    54       1     3     1     1     1     1
             1     3     3     1     1     1
    55       1     1     2     1     1     1
             1     3     3     1     1     1
    56       1     2     2     1     1     1
             1     3     3     1     1     1
    57       1     3     2     1     1     1
             1     3     3     1     1     1
    58       1     1     3     1     1     1
             1     3     3     1     1     1
    59       1     2     3     1     1     1
             1     3     3     1     1     1
    60       1     3     3     1     1     1
             1     3     3     1     1     1
    61       1     1     1     1     1     1
             1     1     7     1     1     1
    62       1     1     2     1     1     1
             1     1     7     1     1     1
    63       1     1     3     1     1     1
             1     1     7     1     1     1
    64       1     1     4     1     1     1
             1     1     7     1     1     1
    65       1     1     5     1     1     1
             1     1     7     1     1     1
    66       1     1     6     1     1     1
             1     1     7     1     1     1
    67       1     1     7     1     1     1
             1     1     7     1     1     1
    68       1     1     1     1     1     1
             3     1     1     3     1     1
    69       2     1     1     1     1     1
             3     1     1     3     1     1
    70       3     1     1     1     1     1
             3     1     1     3     1     1
    71       1     1     1     2     1     1
             3     1     1     3     1     1
    72       2     1     1     2     1     1
             3     1     1     3     1     1
    73       3     1     1     2     1     1
             3     1     1     3     1     1
    74       1     1     1     3     1     1
             3     1     1     3     1     1
    75       2     1     1     3     1     1
             3     1     1     3     1     1
    76       3     1     1     3     1     1
             3     1     1     3     1     1
    77       1     1     1     1     1     1
             1     3     1     3     1     1
    78       1     2     1     1     1     1
             1     3     1     3     1     1
    79       1     3     1     1     1     1
             1     3     1     3     1     1
    80       1     1     1     2     1     1
             1     3     1     3     1     1
    81       1     2     1     2     1     1
             1     3     1     3     1     1
    82       1     3     1     2     1     1
             1     3     1     3     1     1
    83       1     1     1     3     1     1
             1     3     1     3     1     1
    84       1     2     1     3     1     1
             1     3     1     3     1     1
    85       1     3     1     3     1     1
             1     3     1     3     1     1
    86       1     1     1     1     1     1
             1     1     3     3     1     1
    87       1     1     2     1     1     1
             1     1     3     3     1     1
    88       1     1     3     1     1     1
             1     1     3     3     1     1
    89       1     1     1     2     1     1
             1     1     3     3     1     1
    90       1     1     2     2     1     1
             1     1     3     3     1     1
    91       1     1     3     2     1     1
             1     1     3     3     1     1
    92       1     1     1     3     1     1
             1     1     3     3     1     1
    93       1     1     2     3     1     1
             1     1     3     3     1     1
    94       1     1     3     3     1     1
             1     1     3     3     1     1
    95       1     1     1     1     1     1
             1     1     1     7     1     1
    96       1     1     1     2     1     1
             1     1     1     7     1     1
    97       1     1     1     3     1     1
             1     1     1     7     1     1
    98       1     1     1     4     1     1
             1     1     1     7     1     1
    99       1     1     1     5     1     1
             1     1     1     7     1     1
   100       1     1     1     6     1     1
             1     1     1     7     1     1
   101       1     1     1     7     1     1
             1     1     1     7     1     1
   102       1     1     1     1     1     1
             3     1     1     1     3     1
   103       2     1     1     1     1     1
             3     1     1     1     3     1
   104       3     1     1     1     1     1
             3     1     1     1     3     1
   105       1     1     1     1     2     1
             3     1     1     1     3     1
   106       2     1     1     1     2     1
             3     1     1     1     3     1
   107       3     1     1     1     2     1
             3     1     1     1     3     1
   108       1     1     1     1     3     1
             3     1     1     1     3     1
   109       2     1     1     1     3     1
             3     1     1     1     3     1
   110       3     1     1     1     3     1
             3     1     1     1     3     1
   111       1     1     1     1     1     1
             1     3     1     1     3     1
   112       1     2     1     1     1     1
             1     3     1     1     3     1
   113       1     3     1     1     1     1
             1     3     1     1     3     1
   114       1     1     1     1     2     1
             1     3     1     1     3     1
   115       1     2     1     1     2     1
             1     3     1     1     3     1
   116       1     3     1     1     2     1
             1     3     1     1     3     1
   117       1     1     1     1     3     1
             1     3     1     1     3     1
   118       1     2     1     1     3     1
             1     3     1     1     3     1
   119       1     3     1     1     3     1
             1     3     1     1     3     1
   120       1     1     1     1     1     1
             1     1     3     1     3     1
   121       1     1     2     1     1     1
             1     1     3     1     3     1
   122       1     1     3     1     1     1
             1     1     3     1     3     1
   123       1     1     1     1     2     1
             1     1     3     1     3     1
   124       1     1     2     1     2     1
             1     1     3     1     3     1
   125       1     1     3     1     2     1
             1     1     3     1     3     1
   126       1     1     1     1     3     1
             1     1     3     1     3     1
   127       1     1     2     1     3     1
             1     1     3     1     3     1
   128       1     1     3     1     3     1
             1     1     3     1     3     1
   129       1     1     1     1     1     1
             1     1     1     3     3     1
   130       1     1     1     2     1     1
             1     1     1     3     3     1
   131       1     1     1     3     1     1
             1     1     1     3     3     1
   132       1     1     1     1     2     1
             1     1     1     3     3     1
   133       1     1     1     2     2     1
             1     1     1     3     3     1
   134       1     1     1     3     2     1
             1     1     1     3     3     1
   135       1     1     1     1     3     1
             1     1     1     3     3     1
   136       1     1     1     2     3     1
             1     1     1     3     3     1
   137       1     1     1     3     3     1
             1     1     1     3     3     1
   138       1     1     1     1     1     1
             1     1     1     1     7     1
   139       1     1     1     1     2     1
             1     1     1     1     7     1
   140       1     1     1     1     3     1
             1     1     1     1     7     1
   141       1     1     1     1     4     1
             1     1     1     1     7     1
   142       1     1     1     1     5     1
             1     1     1     1     7     1
   143       1     1     1     1     6     1
             1     1     1     1     7     1
   144       1     1     1     1     7     1
             1     1     1     1     7     1
   145       1     1     1     1     1     1
             3     1     1     1     1     3
   146       2     1     1     1     1     1
             3     1     1     1     1     3
   147       3     1     1     1     1     1
             3     1     1     1     1     3
   148       1     1     1     1     1     2
             3     1     1     1     1     3
   149       2     1     1     1     1     2
             3     1     1     1     1     3
   150       3     1     1     1     1     2
             3     1     1     1     1     3
   151       1     1     1     1     1     3
             3     1     1     1     1     3
   152       2     1     1     1     1     3
             3     1     1     1     1     3
   153       3     1     1     1     1     3
             3     1     1     1     1     3
   154       1     1     1     1     1     1
             1     3     1     1     1     3
   155       1     2     1     1     1     1
             1     3     1     1     1     3
   156       1     3     1     1     1     1
             1     3     1     1     1     3
   157       1     1     1     1     1     2
             1     3     1     1     1     3
   158       1     2     1     1     1     2
             1     3     1     1     1     3
   159       1     3     1     1     1     2
             1     3     1     1     1     3
   160       1     1     1     1     1     3
             1     3     1     1     1     3
   161       1     2     1     1     1     3
             1     3     1     1     1     3
   162       1     3     1     1     1     3
             1     3     1     1     1     3
   163       1     1     1     1     1     1
             1     1     3     1     1     3
   164       1     1     2     1     1     1
             1     1     3     1     1     3
   165       1     1     3     1     1     1
             1     1     3     1     1     3
   166       1     1     1     1     1     2
             1     1     3     1     1     3
   167       1     1     2     1     1     2
             1     1     3     1     1     3
   168       1     1     3     1     1     2
             1     1     3     1     1     3
   169       1     1     1     1     1     3
             1     1     3     1     1     3
   170       1     1     2     1     1     3
             1     1     3     1     1     3
   171       1     1     3     1     1     3
             1     1     3     1     1     3
   172       1     1     1     1     1     1
             1     1     1     3     1     3
   173       1     1     1     2     1     1
             1     1     1     3     1     3
   174       1     1     1     3     1     1
             1     1     1     3     1     3
   175       1     1     1     1     1     2
             1     1     1     3     1     3
   176       1     1     1     2     1     2
             1     1     1     3     1     3
   177       1     1     1     3     1     2
             1     1     1     3     1     3
   178       1     1     1     1     1     3
             1     1     1     3     1     3
   179       1     1     1     2     1     3
             1     1     1     3     1     3
   180       1     1     1     3     1     3
             1     1     1     3     1     3
   181       1     1     1     1     1     1
             1     1     1     1     3     3
   182       1     1     1     1     2     1
             1     1     1     1     3     3
   183       1     1     1     1     3     1
             1     1     1     1     3     3
   184       1     1     1     1     1     2
             1     1     1     1     3     3
   185       1     1     1     1     2     2
             1     1     1     1     3     3
   186       1     1     1     1     3     2
             1     1     1     1     3     3
   187       1     1     1     1     1     3
             1     1     1     1     3     3
   188       1     1     1     1     2     3
             1     1     1     1     3     3
   189       1     1     1     1     3     3
             1     1     1     1     3     3
   190       1     1     1     1     1     1
             1     1     1     1     1     7
   191       1     1     1     1     1     2
             1     1     1     1     1     7
   192       1     1     1     1     1     3
             1     1     1     1     1     7
   193       1     1     1     1     1     4
             1     1     1     1     1     7
   194       1     1     1     1     1     5
             1     1     1     1     1     7
   195       1     1     1     1     1     6
             1     1     1     1     1     7
   196       1     1     1     1     1     7
             1     1     1     1     1     7

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  1
  Unique points in the grid = 5

  Grid weights:

     1    1.333333e+00
     2    6.666667e-01
     3    6.666667e-01
     4    6.666667e-01
     5    6.666667e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -1.000000e+00  0.000000e+00
     3    1.000000e+00  0.000000e+00
     4    0.000000e+00 -1.000000e+00
     5    0.000000e+00  1.000000e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  1
  Unique points in the grid = 13

  Grid weights:

     1   -3.555556e-01
     2   -8.888889e-02
     3   -8.888889e-02
     4   -8.888889e-02
     5   -8.888889e-02
     6    1.066667e+00
     7    1.066667e+00
     8    1.111111e-01
     9    1.111111e-01
    10    1.111111e-01
    11    1.111111e-01
    12    1.066667e+00
    13    1.066667e+00

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -1.000000e+00  0.000000e+00
     3    1.000000e+00  0.000000e+00
     4    0.000000e+00 -1.000000e+00
     5    0.000000e+00  1.000000e+00
     6   -7.071068e-01  0.000000e+00
     7    7.071068e-01  0.000000e+00
     8   -1.000000e+00 -1.000000e+00
     9    1.000000e+00 -1.000000e+00
    10   -1.000000e+00  1.000000e+00
    11    1.000000e+00  1.000000e+00
    12    0.000000e+00 -7.071068e-01
    13    0.000000e+00  7.071068e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  1
  Unique points in the grid = 7

  Grid weights:

     1   -1.776357e-15
     2    1.333333e+00
     3    1.333333e+00
     4    1.333333e+00
     5    1.333333e+00
     6    1.333333e+00
     7    1.333333e+00

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -1.000000e+00  0.000000e+00  0.000000e+00
     3    1.000000e+00  0.000000e+00  0.000000e+00
     4    0.000000e+00 -1.000000e+00  0.000000e+00
     5    0.000000e+00  1.000000e+00  0.000000e+00
     6    0.000000e+00  0.000000e+00 -1.000000e+00
     7    0.000000e+00  0.000000e+00  1.000000e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  2
  Unique points in the grid = 5

  Grid weights:

     1    4.444444e-01
     2    8.888889e-01
     3    8.888889e-01
     4    8.888889e-01
     5    8.888889e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -8.660254e-01  0.000000e+00
     3    8.660254e-01  0.000000e+00
     4    0.000000e+00 -8.660254e-01
     5    0.000000e+00  8.660254e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  2
  Unique points in the grid = 17

  Grid weights:

     1   -1.392189e+00
     2    1.806011e-01
     3    1.806011e-01
     4    1.806011e-01
     5    1.806011e-01
     6    1.734324e-01
     7    7.964831e-01
     8    7.964831e-01
     9    1.734324e-01
    10    1.975309e-01
    11    1.975309e-01
    12    1.975309e-01
    13    1.975309e-01
    14    1.734324e-01
    15    7.964831e-01
    16    7.964831e-01
    17    1.734324e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.818315e-01  0.000000e+00
     3    7.818315e-01  0.000000e+00
     4    0.000000e+00 -7.818315e-01
     5    0.000000e+00  7.818315e-01
     6   -9.749279e-01  0.000000e+00
     7   -4.338837e-01  0.000000e+00
     8    4.338837e-01  0.000000e+00
     9    9.749279e-01  0.000000e+00
    10   -7.818315e-01 -7.818315e-01
    11    7.818315e-01 -7.818315e-01
    12   -7.818315e-01  7.818315e-01
    13    7.818315e-01  7.818315e-01
    14    0.000000e+00 -9.749279e-01
    15    0.000000e+00 -4.338837e-01
    16    0.000000e+00  4.338837e-01
    17    0.000000e+00  9.749279e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  2
  Unique points in the grid = 7

  Grid weights:

     1   -2.666667e+00
     2    1.777778e+00
     3    1.777778e+00
     4    1.777778e+00
     5    1.777778e+00
     6    1.777778e+00
     7    1.777778e+00

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -8.660254e-01  0.000000e+00  0.000000e+00
     3    8.660254e-01  0.000000e+00  0.000000e+00
     4    0.000000e+00 -8.660254e-01  0.000000e+00
     5    0.000000e+00  8.660254e-01  0.000000e+00
     6    0.000000e+00  0.000000e+00 -8.660254e-01
     7    0.000000e+00  0.000000e+00  8.660254e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  3
  Unique points in the grid = 5

  Grid weights:

     1   -1.333333e+00
     2    1.333333e+00
     3    1.333333e+00
     4    1.333333e+00
     5    1.333333e+00

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.071068e-01  0.000000e+00
     3    7.071068e-01  0.000000e+00
     4    0.000000e+00 -7.071068e-01
     5    0.000000e+00  7.071068e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  3
  Unique points in the grid = 17

  Grid weights:

     1   -7.746032e-01
     2   -3.936508e-01
     3   -3.936508e-01
     4   -3.936508e-01
     5   -3.936508e-01
     6    3.559294e-01
     7    7.869278e-01
     8    7.869278e-01
     9    3.559294e-01
    10    4.444444e-01
    11    4.444444e-01
    12    4.444444e-01
    13    4.444444e-01
    14    3.559294e-01
    15    7.869278e-01
    16    7.869278e-01
    17    3.559294e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.071068e-01  0.000000e+00
     3    7.071068e-01  0.000000e+00
     4    0.000000e+00 -7.071068e-01
     5    0.000000e+00  7.071068e-01
     6   -9.238795e-01  0.000000e+00
     7   -3.826834e-01  0.000000e+00
     8    3.826834e-01  0.000000e+00
     9    9.238795e-01  0.000000e+00
    10   -7.071068e-01 -7.071068e-01
    11    7.071068e-01 -7.071068e-01
    12   -7.071068e-01  7.071068e-01
    13    7.071068e-01  7.071068e-01
    14    0.000000e+00 -9.238795e-01
    15    0.000000e+00 -3.826834e-01
    16    0.000000e+00  3.826834e-01
    17    0.000000e+00  9.238795e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  3
  Unique points in the grid = 7

  Grid weights:

     1   -8.000000e+00
     2    2.666667e+00
     3    2.666667e+00
     4    2.666667e+00
     5    2.666667e+00
     6    2.666667e+00
     7    2.666667e+00

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -7.071068e-01  0.000000e+00  0.000000e+00
     3    7.071068e-01  0.000000e+00  0.000000e+00
     4    0.000000e+00 -7.071068e-01  0.000000e+00
     5    0.000000e+00  7.071068e-01  0.000000e+00
     6    0.000000e+00  0.000000e+00 -7.071068e-01
     7    0.000000e+00  0.000000e+00  7.071068e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  4
  Unique points in the grid = 5

  Grid weights:

     1   -4.444444e-01
     2    1.111111e+00
     3    1.111111e+00
     4    1.111111e+00
     5    1.111111e+00

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00
     3    7.745967e-01  0.000000e+00
     4    0.000000e+00 -7.745967e-01
     5    0.000000e+00  7.745967e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  4
  Unique points in the grid = 17

  Grid weights:

     1   -9.617659e-01
     2   -8.030777e-02
     3   -8.030777e-02
     4   -8.030777e-02
     5   -8.030777e-02
     6    2.093125e-01
     7    8.027948e-01
     8    8.027948e-01
     9    2.093125e-01
    10    3.086420e-01
    11    3.086420e-01
    12    3.086420e-01
    13    3.086420e-01
    14    2.093125e-01
    15    8.027948e-01
    16    8.027948e-01
    17    2.093125e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00
     3    7.745967e-01  0.000000e+00
     4    0.000000e+00 -7.745967e-01
     5    0.000000e+00  7.745967e-01
     6   -9.604913e-01  0.000000e+00
     7   -4.342437e-01  0.000000e+00
     8    4.342437e-01  0.000000e+00
     9    9.604913e-01  0.000000e+00
    10   -7.745967e-01 -7.745967e-01
    11    7.745967e-01 -7.745967e-01
    12   -7.745967e-01  7.745967e-01
    13    7.745967e-01  7.745967e-01
    14    0.000000e+00 -9.604913e-01
    15    0.000000e+00 -4.342437e-01
    16    0.000000e+00  4.342437e-01
    17    0.000000e+00  9.604913e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  4
  Unique points in the grid = 7

  Grid weights:

     1   -5.333333e+00
     2    2.222222e+00
     3    2.222222e+00
     4    2.222222e+00
     5    2.222222e+00
     6    2.222222e+00
     7    2.222222e+00

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00  0.000000e+00
     3    7.745967e-01  0.000000e+00  0.000000e+00
     4    0.000000e+00 -7.745967e-01  0.000000e+00
     5    0.000000e+00  7.745967e-01  0.000000e+00
     6    0.000000e+00  0.000000e+00 -7.745967e-01
     7    0.000000e+00  0.000000e+00  7.745967e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  5
  Unique points in the grid = 5

  Grid weights:

     1   -4.444444e-01
     2    1.111111e+00
     3    1.111111e+00
     4    1.111111e+00
     5    1.111111e+00

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00
     3    7.745967e-01  0.000000e+00
     4    0.000000e+00 -7.745967e-01
     5    0.000000e+00  7.745967e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  5
  Unique points in the grid = 21

  Grid weights:

     1   -1.093595e+00
     2   -6.172840e-01
     3   -6.172840e-01
     4   -6.172840e-01
     5   -6.172840e-01
     6    2.589699e-01
     7    5.594108e-01
     8    7.636601e-01
     9    7.636601e-01
    10    5.594108e-01
    11    2.589699e-01
    12    3.086420e-01
    13    3.086420e-01
    14    3.086420e-01
    15    3.086420e-01
    16    2.589699e-01
    17    5.594108e-01
    18    7.636601e-01
    19    7.636601e-01
    20    5.594108e-01
    21    2.589699e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00
     3    7.745967e-01  0.000000e+00
     4    0.000000e+00 -7.745967e-01
     5    0.000000e+00  7.745967e-01
     6   -9.491079e-01  0.000000e+00
     7   -7.415312e-01  0.000000e+00
     8   -4.058452e-01  0.000000e+00
     9    4.058452e-01  0.000000e+00
    10    7.415312e-01  0.000000e+00
    11    9.491079e-01  0.000000e+00
    12   -7.745967e-01 -7.745967e-01
    13    7.745967e-01 -7.745967e-01
    14   -7.745967e-01  7.745967e-01
    15    7.745967e-01  7.745967e-01
    16    0.000000e+00 -9.491079e-01
    17    0.000000e+00 -7.415312e-01
    18    0.000000e+00 -4.058452e-01
    19    0.000000e+00  4.058452e-01
    20    0.000000e+00  7.415312e-01
    21    0.000000e+00  9.491079e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  5
  Unique points in the grid = 7

  Grid weights:

     1   -5.333333e+00
     2    2.222222e+00
     3    2.222222e+00
     4    2.222222e+00
     5    2.222222e+00
     6    2.222222e+00
     7    2.222222e+00

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -7.745967e-01  0.000000e+00  0.000000e+00
     3    7.745967e-01  0.000000e+00  0.000000e+00
     4    0.000000e+00 -7.745967e-01  0.000000e+00
     5    0.000000e+00  7.745967e-01  0.000000e+00
     6    0.000000e+00  0.000000e+00 -7.745967e-01
     7    0.000000e+00  0.000000e+00  7.745967e-01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  6
  Unique points in the grid = 5

  Grid weights:

     1    1.047198e+00
     2    5.235988e-01
     3    5.235988e-01
     4    5.235988e-01
     5    5.235988e-01

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -1.224745e+00  0.000000e+00
     3    1.224745e+00  0.000000e+00
     4    0.000000e+00 -1.224745e+00
     5    0.000000e+00  1.224745e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  6
  Unique points in the grid = 21

  Grid weights:

     1    7.978648e-02
     2   -1.745329e-01
     3   -1.745329e-01
     4   -1.745329e-01
     5   -1.745329e-01
     6    1.722437e-03
     7    9.662635e-02
     8    7.543692e-01
     9    7.543692e-01
    10    9.662635e-02
    11    1.722437e-03
    12    8.726646e-02
    13    8.726646e-02
    14    8.726646e-02
    15    8.726646e-02
    16    1.722437e-03
    17    9.662635e-02
    18    7.543692e-01
    19    7.543692e-01
    20    9.662635e-02
    21    1.722437e-03

  Grid points:

     1    0.000000e+00  0.000000e+00
     2   -1.224745e+00  0.000000e+00
     3    1.224745e+00  0.000000e+00
     4    0.000000e+00 -1.224745e+00
     5    0.000000e+00  1.224745e+00
     6   -2.651961e+00  0.000000e+00
     7   -1.673552e+00  0.000000e+00
     8   -8.162879e-01  0.000000e+00
     9    8.162879e-01  0.000000e+00
    10    1.673552e+00  0.000000e+00
    11    2.651961e+00  0.000000e+00
    12   -1.224745e+00 -1.224745e+00
    13    1.224745e+00 -1.224745e+00
    14   -1.224745e+00  1.224745e+00
    15    1.224745e+00  1.224745e+00
    16    0.000000e+00 -2.651961e+00
    17    0.000000e+00 -1.673552e+00
    18    0.000000e+00 -8.162879e-01
    19    0.000000e+00  8.162879e-01
    20    0.000000e+00  1.673552e+00
    21    0.000000e+00  2.651961e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  6
  Unique points in the grid = 7

  Grid weights:

     1   -8.881784e-16
     2    9.280547e-01
     3    9.280547e-01
     4    9.280547e-01
     5    9.280547e-01
     6    9.280547e-01
     7    9.280547e-01

  Grid points:

     1    0.000000e+00  0.000000e+00  0.000000e+00
     2   -1.224745e+00  0.000000e+00  0.000000e+00
     3    1.224745e+00  0.000000e+00  0.000000e+00
     4    0.000000e+00 -1.224745e+00  0.000000e+00
     5    0.000000e+00  1.224745e+00  0.000000e+00
     6    0.000000e+00  0.000000e+00 -1.224745e+00
     7    0.000000e+00  0.000000e+00  1.224745e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  7
  Unique points in the grid = 7

  Grid weights:

     1   -1.000000e+00
     2    7.110930e-01
     3    2.785177e-01
     4    1.038926e-02
     5    7.110930e-01
     6    2.785177e-01
     7    1.038926e-02

  Grid points:

     1    1.000000e+00  1.000000e+00
     2    4.157746e-01  1.000000e+00
     3    2.294280e+00  1.000000e+00
     4    6.289945e+00  1.000000e+00
     5    1.000000e+00  4.157746e-01
     6    1.000000e+00  2.294280e+00
     7    1.000000e+00  6.289945e+00

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  7
  Unique points in the grid = 29

  Grid weights:

     1   -7.110930e-01
     2   -2.785177e-01
     3   -1.038926e-02
     4   -7.110930e-01
     5   -2.785177e-01
     6   -1.038926e-02
     7    4.093190e-01
     8    4.218313e-01
     9    1.471263e-01
    10    2.063351e-02
    11    1.074010e-03
    12    1.586546e-05
    13    3.170315e-08
    14    5.056533e-01
    15    1.980520e-01
    16    7.387728e-03
    17    1.980520e-01
    18    7.757213e-02
    19    2.893592e-03
    20    7.387728e-03
    21    2.893592e-03
    22    1.079367e-04
    23    4.093190e-01
    24    4.218313e-01
    25    1.471263e-01
    26    2.063351e-02
    27    1.074010e-03
    28    1.586546e-05
    29    3.170315e-08

  Grid points:

     1    4.157746e-01  1.000000e+00
     2    2.294280e+00  1.000000e+00
     3    6.289945e+00  1.000000e+00
     4    1.000000e+00  4.157746e-01
     5    1.000000e+00  2.294280e+00
     6    1.000000e+00  6.289945e+00
     7    1.930437e-01  1.000000e+00
     8    1.026665e+00  1.000000e+00
     9    2.567877e+00  1.000000e+00
    10    4.900353e+00  1.000000e+00
    11    8.182153e+00  1.000000e+00
    12    1.273418e+01  1.000000e+00
    13    1.939573e+01  1.000000e+00
    14    4.157746e-01  4.157746e-01
    15    2.294280e+00  4.157746e-01
    16    6.289945e+00  4.157746e-01
    17    4.157746e-01  2.294280e+00
    18    2.294280e+00  2.294280e+00
    19    6.289945e+00  2.294280e+00
    20    4.157746e-01  6.289945e+00
    21    2.294280e+00  6.289945e+00
    22    6.289945e+00  6.289945e+00
    23    1.000000e+00  1.930437e-01
    24    1.000000e+00  1.026665e+00
    25    1.000000e+00  2.567877e+00
    26    1.000000e+00  4.900353e+00
    27    1.000000e+00  8.182153e+00
    28    1.000000e+00  1.273418e+01
    29    1.000000e+00  1.939573e+01

SPARSE_GRID_COMPUTE_TEST:
  SPARSE_GRID can make a sparse grid.

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  7
  Unique points in the grid = 10

  Grid weights:

     1   -2.000000e+00
     2    7.110930e-01
     3    2.785177e-01
     4    1.038926e-02
     5    7.110930e-01
     6    2.785177e-01
     7    1.038926e-02
     8    7.110930e-01
     9    2.785177e-01
    10    1.038926e-02

  Grid points:

     1    1.000000e+00  1.000000e+00  1.000000e+00
     2    4.157746e-01  1.000000e+00  1.000000e+00
     3    2.294280e+00  1.000000e+00  1.000000e+00
     4    6.289945e+00  1.000000e+00  1.000000e+00
     5    1.000000e+00  4.157746e-01  1.000000e+00
     6    1.000000e+00  2.294280e+00  1.000000e+00
     7    1.000000e+00  6.289945e+00  1.000000e+00
     8    1.000000e+00  1.000000e+00  4.157746e-01
     9    1.000000e+00  1.000000e+00  2.294280e+00
    10    1.000000e+00  1.000000e+00  6.289945e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 4.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  1
  Unique points in the grid = 65

    Weight sum  Expected sum    Difference

    4.000000e+00    4.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  1
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  1
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  1
  Unique points in the grid = 1073

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    9.769963e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1024.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  1
  Unique points in the grid = 1581

    Weight sum  Expected sum    Difference

    1.024000e+03    1.024000e+03    3.615241e-11

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 4.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  2
  Unique points in the grid = 129

    Weight sum  Expected sum    Difference

    4.000000e+00    4.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  2
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  2
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    4.440892e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  2
  Unique points in the grid = 2815

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    1.953993e-14

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1024.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  2
  Unique points in the grid = 2001

    Weight sum  Expected sum    Difference

    1.024000e+03    1.024000e+03    2.114575e-11

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 4.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  3
  Unique points in the grid = 129

    Weight sum  Expected sum    Difference

    4.000000e+00    4.000000e+00    3.552714e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  3
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  3
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    1.776357e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  3
  Unique points in the grid = 2815

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    1.989520e-13

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1024.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  3
  Unique points in the grid = 2001

    Weight sum  Expected sum    Difference

    1.024000e+03    1.024000e+03    1.223270e-09

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 4.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  4
  Unique points in the grid = 129

    Weight sum  Expected sum    Difference

    4.000000e+00    4.000000e+00    8.881784e-16

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  4
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  4
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  4
  Unique points in the grid = 2815

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    2.344791e-13

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1024.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  4
  Unique points in the grid = 2001

    Weight sum  Expected sum    Difference

    1.024000e+03    1.024000e+03    1.227818e-09

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 4.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  5
  Unique points in the grid = 225

    Weight sum  Expected sum    Difference

    4.000000e+00    4.000000e+00    8.881784e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  5
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  5
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 8.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  5
  Unique points in the grid = 6405

    Weight sum  Expected sum    Difference

    8.000000e+00    8.000000e+00    8.446577e-13

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1024.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  5
  Unique points in the grid = 2441

    Weight sum  Expected sum    Difference

    1.024000e+03    1.024000e+03    1.546596e-09

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 3.141593

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  6
  Unique points in the grid = 225

    Weight sum  Expected sum    Difference

    3.141593e+00    3.141593e+00    1.954970e-11

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 5.568328

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  6
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    5.568328e+00    5.568328e+00    8.881784e-16

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 5.568328

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  6
  Unique points in the grid = 7

    Weight sum  Expected sum    Difference

    5.568328e+00    5.568328e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 5.568328

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  6
  Unique points in the grid = 6405

    Weight sum  Expected sum    Difference

    5.568328e+00    5.568328e+00    5.194423e-11

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 306.019685

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  6
  Unique points in the grid = 2441

    Weight sum  Expected sum    Difference

    3.060197e+02    3.060197e+02    8.100187e-11

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1.000000

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 3
  LEVEL_MAX =                 4
  1D quadrature index RULE =  7
  Unique points in the grid = 273

    Weight sum  Expected sum    Difference

    1.000000e+00    1.000000e+00    1.332268e-15

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  7
  Unique points in the grid = 1

    Weight sum  Expected sum    Difference

    1.000000e+00    1.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  7
  Unique points in the grid = 10

    Weight sum  Expected sum    Difference

    1.000000e+00    1.000000e+00    0.000000e+00

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1.000000

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 4
  LEVEL_MAX =                 6
  1D quadrature index RULE =  7
  Unique points in the grid = 9484

    Weight sum  Expected sum    Difference

    1.000000e+00    1.000000e+00    1.389999e-13

SPARSE_GRID_WEIGHT_TEST:
  Compute the weights of a sparse grid.

  As a simple test, sum these weights.
  They should sum to exactly 1.000000

  Spatial dimension DIM_NUM = 10
  LEVEL_MIN =                 0
  LEVEL_MAX =                 3
  1D quadrature index RULE =  7
  Unique points in the grid = 5786

    Weight sum  Expected sum    Difference

    1.000000e+00    1.000000e+00    1.530553e-12

SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3

    6.666667e-01   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    6.666667e-01   4   0 4

    0.000000e+00   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    0.000000e+00   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 13

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    3.191891e-16   1   1 0
    3.167762e-16   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    2.775558e-16   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    2.731111e-16   3   0 3

    0.000000e+00   4   4 0
    0.000000e+00   4   3 1
    2.498002e-16   4   2 2
    0.000000e+00   4   1 3
    1.387779e-16   4   0 4

    1.942890e-16   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    1.939171e-16   5   0 5

    6.666667e-02   6   6 0
    0.000000e+00   6   5 1
    6.666667e-01   6   4 2
    0.000000e+00   6   3 3
    6.666667e-01   6   2 4
    0.000000e+00   6   1 5
    6.666667e-02   6   0 6

    1.387779e-16   7   7 0
    0.000000e+00   7   6 1
    0.000000e+00   7   5 2
    0.000000e+00   7   4 3
    0.000000e+00   7   3 4
    0.000000e+00   7   2 5
    0.000000e+00   7   1 6
    1.395171e-16   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 29

      Error      Total   Monomial
                 Degree  Exponents

    1.110223e-16   0   0 0

    4.996004e-16   1   1 0
    5.026665e-16   1   0 1

    1.665335e-16   2   2 0
    1.084454e-17   2   1 1
    0.000000e+00   2   0 2

    3.330669e-16   3   3 0
    1.556889e-16   3   2 1
    1.307596e-16   3   1 2
    2.289994e-16   3   0 3

    1.387779e-16   4   4 0
    1.691103e-17   4   3 1
    3.747003e-16   4   2 2
    9.431411e-18   4   1 3
    0.000000e+00   4   0 4

    1.942890e-16   5   5 0
    1.556889e-16   5   4 1
    1.030040e-16   5   3 2
    1.154687e-16   5   2 3
    1.278298e-16   5   1 4
    1.488830e-16   5   0 5

    1.942890e-16   6   6 0
    1.084454e-17   6   5 1
    2.081668e-16   6   4 2
    4.446377e-18   6   3 3
    2.081668e-16   6   2 4
    1.365917e-17   6   1 5
    0.000000e+00   6   0 6

    1.387779e-16   7   7 0
    1.001778e-16   7   6 1
    7.524845e-17   7   5 2
    1.154687e-16   7   4 3
    1.000743e-16   7   3 4
    6.960756e-17   7   2 5
    1.278298e-16   7   1 6
    1.155466e-16   7   0 7

    2.498002e-16   8   8 0
    1.691103e-17   8   7 1
    6.666667e-02   8   6 2
    4.446377e-18   8   5 3
    4.444444e-01   8   4 4
    7.157513e-18   8   3 5
    6.666667e-02   8   2 6
    7.831869e-18   8   1 7
    2.498002e-16   8   0 8

    1.387779e-16   9   9 0
    1.556889e-16   9   8 1
    4.749287e-17   9   7 2
    8.771310e-17   9   6 3
    7.231869e-17   9   5 4
    6.960756e-17   9   4 5
    1.035437e-16   9   3 6
    5.461818e-17   9   2 7
    1.280997e-16   9   1 8
    7.153638e-17   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    0.000000e+00   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    0.000000e+00   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    0.000000e+00   3   0 0 3

    6.666667e-01   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    6.666667e-01   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    6.666667e-01   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  1
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 25

      Error      Total   Monomial
                 Degree  Exponents

    5.551115e-16   0   0 0 0

    6.106227e-16   1   1 0 0
    8.881784e-16   1   0 1 0
    4.115077e-16   1   0 0 1

    0.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    0.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    5.273559e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    6.661338e-16   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    4.351999e-16   3   0 0 3

    2.775558e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    2.498002e-16   4   2 2 0
    0.000000e+00   4   1 3 0
    1.387779e-16   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    2.498002e-16   4   2 0 2
    0.000000e+00   4   1 1 2
    2.498002e-16   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    0.000000e+00   4   0 0 4

    3.885781e-16   5   5 0 0
    0.000000e+00   5   4 1 0
    0.000000e+00   5   3 2 0
    0.000000e+00   5   2 3 0
    0.000000e+00   5   1 4 0
    5.551115e-16   5   0 5 0
    0.000000e+00   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    0.000000e+00   5   0 4 1
    0.000000e+00   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    0.000000e+00   5   0 3 2
    0.000000e+00   5   2 0 3
    0.000000e+00   5   1 1 3
    0.000000e+00   5   0 2 3
    0.000000e+00   5   1 0 4
    0.000000e+00   5   0 1 4
    3.323230e-16   5   0 0 5

    6.666667e-02   6   6 0 0
    0.000000e+00   6   5 1 0
    6.666667e-01   6   4 2 0
    0.000000e+00   6   3 3 0
    6.666667e-01   6   2 4 0
    0.000000e+00   6   1 5 0
    6.666667e-02   6   0 6 0
    0.000000e+00   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    0.000000e+00   6   0 5 1
    6.666667e-01   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    6.666667e-01   6   0 4 2
    0.000000e+00   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    0.000000e+00   6   0 3 3
    6.666667e-01   6   2 0 4
    0.000000e+00   6   1 1 4
    6.666667e-01   6   0 2 4
    0.000000e+00   6   1 0 5
    0.000000e+00   6   0 1 5
    6.666667e-02   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    2.220446e-16   0   0 0

    3.186713e-18   1   1 0
    3.186713e-18   1   0 1

    0.000000e+00   2   2 0
    0.000000e+00   2   1 1
    0.000000e+00   2   0 2

    4.386926e-17   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    4.386926e-17   3   0 3

    2.500000e-01   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    2.500000e-01   4   0 4

    4.105491e-18   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    4.105491e-18   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 17

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    1.097629e-16   1   1 0
    1.028888e-16   1   0 1

    1.665335e-16   2   2 0
    4.140903e-18   2   1 1
    3.330669e-16   2   0 2

    3.725713e-16   3   3 0
    9.501552e-17   3   2 1
    8.113773e-17   3   1 2
    3.790480e-16   3   0 3

    8.326673e-16   4   4 0
    3.421829e-18   4   3 1
    3.357523e-01   4   2 2
    3.421829e-18   4   1 3
    5.551115e-16   4   0 4

    3.713004e-16   5   5 0
    4.517242e-17   5   4 1
    1.561947e-16   5   3 2
    1.561947e-16   5   2 3
    4.517242e-17   5   1 4
    3.576029e-16   5   0 5

    5.828671e-16   6   6 0
    2.371738e-19   6   5 1
    3.232860e-01   6   4 2
    2.371738e-19   6   3 3
    3.232860e-01   6   2 4
    2.371738e-19   6   1 5
    5.828671e-16   6   0 6

    3.336182e-16   7   7 0
    2.976314e-17   7   6 1
    1.477243e-16   7   5 2
    9.915208e-17   7   4 3
    9.221318e-17   7   3 4
    1.407854e-16   7   2 5
    2.976314e-17   7   1 6
    3.346192e-16   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 49

      Error      Total   Monomial
                 Degree  Exponents

    3.330669e-16   0   0 0

    5.551115e-17   1   1 0
    5.823489e-17   1   0 1

    1.665335e-16   2   2 0
    1.387779e-17   2   1 1
    1.665335e-16   2   0 2

    5.551115e-17   3   3 0
    6.245005e-17   3   2 1
    6.591949e-17   3   1 2
    8.173020e-17   3   0 3

    2.775558e-16   4   4 0
    1.387779e-17   4   3 1
    2.023003e-01   4   2 2
    0.000000e+00   4   1 3
    2.775558e-16   4   0 4

    4.163336e-17   5   5 0
    3.122502e-17   5   4 1
    5.898060e-17   5   3 2
    6.938894e-17   5   2 3
    2.081668e-17   5   1 4
    4.010478e-17   5   0 5

    1.942890e-16   6   6 0
    1.387779e-17   6   5 1
    2.578750e-01   6   4 2
    6.938894e-18   6   3 3
    2.578750e-01   6   2 4
    1.387779e-17   6   1 5
    1.942890e-16   6   0 6

    1.387779e-17   7   7 0
    1.040834e-17   7   6 1
    6.245005e-17   7   5 2
    4.250073e-17   7   4 3
    3.816392e-17   7   3 4
    6.418477e-17   7   2 5
    2.081668e-17   7   1 6
    1.595190e-17   7   0 7

    2.498002e-16   8   8 0
    6.938894e-18   8   7 1
    3.191324e-01   8   6 2
    0.000000e+00   8   5 3
    3.096560e-01   8   4 4
    3.469447e-18   8   3 5
    3.191324e-01   8   2 6
    0.000000e+00   8   1 7
    2.498002e-16   8   0 8

    2.081668e-17   9   9 0
    1.214306e-17   9   8 1
    4.857226e-17   9   7 2
    3.122502e-17   9   6 3
    3.642919e-17   9   5 4
    3.729655e-17   9   4 5
    2.775558e-17   9   3 6
    5.290907e-17   9   2 7
    2.081668e-17   9   1 8
    1.866462e-17   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    5.551115e-16   0   0 0 0

    6.373426e-18   1   1 0 0
    6.373426e-18   1   0 1 0
    6.373426e-18   1   0 0 1

    0.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    0.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    0.000000e+00   2   0 0 2

    8.773852e-17   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    8.773852e-17   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    8.773852e-17   3   0 0 3

    2.500000e-01   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    2.500000e-01   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    2.500000e-01   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  2
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 31

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    2.220446e-16   1   1 0 0
    1.110223e-16   1   0 1 0
    2.057777e-16   1   0 0 1

    3.330669e-16   2   2 0 0
    2.775558e-17   2   1 1 0
    4.996004e-16   2   0 2 0
    2.775558e-17   2   1 0 1
    2.775558e-17   2   0 1 1
    4.996004e-16   2   0 0 2

    7.216450e-16   3   3 0 0
    1.665335e-16   3   2 1 0
    1.665335e-16   3   1 2 0
    6.661338e-16   3   0 3 0
    1.665335e-16   3   2 0 1
    0.000000e+00   3   1 1 1
    1.665335e-16   3   0 2 1
    1.665335e-16   3   1 0 2
    1.665335e-16   3   0 1 2
    7.025849e-16   3   0 0 3

    8.326673e-16   4   4 0 0
    2.775558e-17   4   3 1 0
    3.357523e-01   4   2 2 0
    2.775558e-17   4   1 3 0
    8.326673e-16   4   0 4 0
    2.775558e-17   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    2.775558e-17   4   0 3 1
    3.357523e-01   4   2 0 2
    0.000000e+00   4   1 1 2
    3.357523e-01   4   0 2 2
    2.775558e-17   4   1 0 3
    2.775558e-17   4   0 1 3
    8.326673e-16   4   0 0 4

    7.216450e-16   5   5 0 0
    9.714451e-17   5   4 1 0
    3.191891e-16   5   3 2 0
    3.191891e-16   5   2 3 0
    9.714451e-17   5   1 4 0
    7.216450e-16   5   0 5 0
    9.714451e-17   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    9.714451e-17   5   0 4 1
    3.191891e-16   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    3.191891e-16   5   0 3 2
    3.191891e-16   5   2 0 3
    0.000000e+00   5   1 1 3
    3.191891e-16   5   0 2 3
    9.714451e-17   5   1 0 4
    9.714451e-17   5   0 1 4
    7.707169e-16   5   0 0 5

    7.771561e-16   6   6 0 0
    1.387779e-17   6   5 1 0
    3.232860e-01   6   4 2 0
    1.387779e-17   6   3 3 0
    3.232860e-01   6   2 4 0
    1.387779e-17   6   1 5 0
    9.714451e-16   6   0 6 0
    1.387779e-17   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    1.387779e-17   6   0 5 1
    3.232860e-01   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    3.232860e-01   6   0 4 2
    1.387779e-17   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    1.387779e-17   6   0 3 3
    3.232860e-01   6   2 0 4
    0.000000e+00   6   1 1 4
    3.232860e-01   6   0 2 4
    1.387779e-17   6   1 0 5
    1.387779e-17   6   0 1 5
    7.771561e-16   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    2.167845e-17   1   1 0
    2.167845e-17   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    1.403652e-16   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.403652e-16   3   0 3

    1.666667e-01   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    1.666667e-01   4   0 4

    1.349456e-16   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    1.349456e-16   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 17

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    8.529243e-17   1   1 0
    1.036424e-16   1   0 1

    1.665335e-16   2   2 0
    6.167906e-18   2   1 1
    1.665335e-16   2   0 2

    9.780981e-18   3   3 0
    1.797459e-17   3   2 1
    9.780981e-18   3   1 2
    1.266848e-17   3   0 3

    0.000000e+00   4   4 0
    1.696174e-17   4   3 1
    1.249001e-16   4   2 2
    1.696174e-17   4   1 3
    0.000000e+00   4   0 4

    3.348514e-18   5   5 0
    4.890491e-18   5   4 1
    5.885967e-17   5   3 2
    4.498188e-17   5   2 3
    4.890491e-18   5   1 4
    1.362749e-17   5   0 5

    0.000000e+00   6   6 0
    3.854941e-18   6   5 1
    1.666667e-01   6   4 2
    3.083953e-18   6   3 3
    1.666667e-01   6   2 4
    3.854941e-18   6   1 5
    0.000000e+00   6   0 6

    9.032689e-19   7   7 0
    7.842163e-18   7   6 1
    5.641442e-17   7   5 2
    2.942983e-17   7   4 3
    2.942983e-17   7   3 4
    4.947553e-17   7   2 5
    7.842163e-18   7   1 6
    2.110009e-17   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 49

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    5.551115e-17   1   1 0
    1.674648e-16   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    1.665335e-16   3   3 0
    6.245005e-17   3   2 1
    5.551115e-17   3   1 2
    1.079415e-16   3   0 3

    1.387779e-16   4   4 0
    6.938894e-18   4   3 1
    1.249001e-16   4   2 2
    1.908196e-17   4   1 3
    0.000000e+00   4   0 4

    1.942890e-16   5   5 0
    1.734723e-17   5   4 1
    2.081668e-17   5   3 2
    1.908196e-17   5   2 3
    0.000000e+00   5   1 4
    1.870731e-16   5   0 5

    3.885781e-16   6   6 0
    1.387779e-17   6   5 1
    0.000000e+00   6   4 2
    0.000000e+00   6   3 3
    0.000000e+00   6   2 4
    3.469447e-18   6   1 5
    3.885781e-16   6   0 6

    2.220446e-16   7   7 0
    2.081668e-17   7   6 1
    1.040834e-17   7   5 2
    1.040834e-17   7   4 3
    6.938894e-18   7   3 4
    1.040834e-17   7   2 5
    1.387779e-17   7   1 6
    1.968300e-16   7   0 7

    4.996004e-16   8   8 0
    0.000000e+00   8   7 1
    0.000000e+00   8   6 2
    0.000000e+00   8   5 3
    2.777778e-02   8   4 4
    3.469447e-18   8   3 5
    0.000000e+00   8   2 6
    3.469447e-18   8   1 7
    3.747003e-16   8   0 8

    2.081668e-16   9   9 0
    0.000000e+00   9   8 1
    6.938894e-18   9   7 2
    0.000000e+00   9   6 3
    1.387779e-17   9   5 4
    1.734723e-18   9   4 5
    6.938894e-18   9   3 6
    1.301043e-17   9   2 7
    0.000000e+00   9   1 8
    2.215841e-16   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    2.220446e-16   0   0 0 0

    4.335691e-17   1   1 0 0
    4.335691e-17   1   0 1 0
    4.335691e-17   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    2.807305e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    2.807305e-16   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    2.807305e-16   3   0 0 3

    1.666667e-01   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    1.666667e-01   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    1.666667e-01   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  3
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 31

      Error      Total   Monomial
                 Degree  Exponents

    1.110223e-16   0   0 0 0

    3.330669e-16   1   1 0 0
    4.440892e-16   1   0 1 0
    6.513741e-16   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    3.330669e-16   2   0 0 2

    2.220446e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    0.000000e+00   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    1.967076e-16   3   0 0 3

    1.387779e-16   4   4 0 0
    2.775558e-17   4   3 1 0
    0.000000e+00   4   2 2 0
    2.775558e-17   4   1 3 0
    1.387779e-16   4   0 4 0
    2.775558e-17   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    2.775558e-17   4   0 3 1
    1.249001e-16   4   2 0 2
    0.000000e+00   4   1 1 2
    0.000000e+00   4   0 2 2
    2.775558e-17   4   1 0 3
    2.775558e-17   4   0 1 3
    1.387779e-16   4   0 0 4

    1.110223e-16   5   5 0 0
    0.000000e+00   5   4 1 0
    1.110223e-16   5   3 2 0
    1.110223e-16   5   2 3 0
    0.000000e+00   5   1 4 0
    1.110223e-16   5   0 5 0
    0.000000e+00   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    0.000000e+00   5   0 4 1
    1.110223e-16   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    1.110223e-16   5   0 3 2
    1.110223e-16   5   2 0 3
    0.000000e+00   5   1 1 3
    1.110223e-16   5   0 2 3
    0.000000e+00   5   1 0 4
    0.000000e+00   5   0 1 4
    1.947896e-16   5   0 0 5

    0.000000e+00   6   6 0 0
    2.775558e-17   6   5 1 0
    1.666667e-01   6   4 2 0
    0.000000e+00   6   3 3 0
    1.666667e-01   6   2 4 0
    2.775558e-17   6   1 5 0
    0.000000e+00   6   0 6 0
    2.775558e-17   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    2.775558e-17   6   0 5 1
    1.666667e-01   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    1.666667e-01   6   0 4 2
    0.000000e+00   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    0.000000e+00   6   0 3 3
    1.666667e-01   6   2 0 4
    0.000000e+00   6   1 1 4
    1.666667e-01   6   0 2 4
    2.775558e-17   6   1 0 5
    2.775558e-17   6   0 1 5
    0.000000e+00   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    1.354949e-17   1   1 0
    1.354949e-17   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    1.738955e-18   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.738955e-18   3   0 3

    1.387779e-16   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    1.387779e-16   4   0 4

    1.091202e-17   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    1.091202e-17   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 17

      Error      Total   Monomial
                 Degree  Exponents

    2.220446e-16   0   0 0

    2.955289e-17   1   1 0
    3.685389e-17   1   0 1

    1.665335e-16   2   2 0
    5.208454e-18   2   1 1
    1.665335e-16   2   0 2

    3.565491e-17   3   3 0
    2.723166e-18   3   2 1
    2.723166e-18   3   1 2
    3.255081e-17   3   0 3

    0.000000e+00   4   4 0
    8.628215e-18   4   3 1
    4.996004e-16   4   2 2
    8.628215e-18   4   1 3
    0.000000e+00   4   0 4

    8.487128e-18   5   5 0
    5.390660e-18   5   4 1
    5.231845e-18   5   3 2
    5.231845e-18   5   2 3
    5.390660e-18   5   1 4
    1.860811e-17   5   0 5

    0.000000e+00   6   6 0
    3.149744e-18   6   5 1
    4.163336e-16   6   4 2
    3.149744e-18   6   3 3
    4.163336e-16   6   2 4
    3.149744e-18   6   1 5
    1.942890e-16   6   0 6

    1.147540e-17   7   7 0
    2.402385e-18   7   6 1
    2.402385e-18   7   5 2
    2.402385e-18   7   4 3
    2.402385e-18   7   3 4
    2.402385e-18   7   2 5
    2.402385e-18   7   1 6
    1.416251e-17   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 49

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    5.551115e-17   1   1 0
    3.882120e-17   1   0 1

    1.665335e-16   2   2 0
    2.081668e-17   2   1 1
    0.000000e+00   2   0 2

    0.000000e+00   3   3 0
    2.081668e-17   3   2 1
    0.000000e+00   3   1 2
    1.425132e-17   3   0 3

    0.000000e+00   4   4 0
    1.387779e-17   4   3 1
    2.498002e-16   4   2 2
    6.938894e-18   4   1 3
    0.000000e+00   4   0 4

    0.000000e+00   5   5 0
    6.938894e-18   5   4 1
    6.938894e-18   5   3 2
    5.204170e-18   5   2 3
    0.000000e+00   5   1 4
    4.414334e-17   5   0 5

    0.000000e+00   6   6 0
    6.938894e-18   6   5 1
    0.000000e+00   6   4 2
    0.000000e+00   6   3 3
    0.000000e+00   6   2 4
    3.469447e-18   6   1 5
    1.942890e-16   6   0 6

    0.000000e+00   7   7 0
    6.938894e-18   7   6 1
    0.000000e+00   7   5 2
    0.000000e+00   7   4 3
    6.938894e-18   7   3 4
    2.602085e-18   7   2 5
    0.000000e+00   7   1 6
    2.655108e-17   7   0 7

    0.000000e+00   8   8 0
    6.938894e-18   8   7 1
    1.457168e-16   8   6 2
    1.387779e-17   8   5 3
    1.734723e-16   8   4 4
    0.000000e+00   8   3 5
    0.000000e+00   8   2 6
    5.204170e-18   8   1 7
    2.498002e-16   8   0 8

    1.387779e-17   9   9 0
    1.387779e-17   9   8 1
    0.000000e+00   9   7 2
    0.000000e+00   9   6 3
    0.000000e+00   9   5 4
    0.000000e+00   9   4 5
    0.000000e+00   9   3 6
    3.469447e-18   9   2 7
    0.000000e+00   9   1 8
    8.632090e-18   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    2.709898e-17   1   1 0 0
    2.709898e-17   1   0 1 0
    2.709898e-17   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    3.477909e-18   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    3.477909e-18   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    3.477909e-18   3   0 0 3

    1.387779e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    1.387779e-16   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    1.387779e-16   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  4
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 31

      Error      Total   Monomial
                 Degree  Exponents

    4.440892e-16   0   0 0 0

    0.000000e+00   1   1 0 0
    4.440892e-16   1   0 1 0
    7.370778e-17   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    5.551115e-17   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    0.000000e+00   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    1.014318e-16   3   0 0 3

    1.387779e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    4.996004e-16   4   2 2 0
    0.000000e+00   4   1 3 0
    1.387779e-16   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    4.996004e-16   4   2 0 2
    0.000000e+00   4   1 1 2
    4.996004e-16   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    0.000000e+00   4   0 0 4

    0.000000e+00   5   5 0 0
    0.000000e+00   5   4 1 0
    0.000000e+00   5   3 2 0
    0.000000e+00   5   2 3 0
    0.000000e+00   5   1 4 0
    0.000000e+00   5   0 5 0
    0.000000e+00   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    0.000000e+00   5   0 4 1
    0.000000e+00   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    0.000000e+00   5   0 3 2
    0.000000e+00   5   2 0 3
    0.000000e+00   5   1 1 3
    0.000000e+00   5   0 2 3
    0.000000e+00   5   1 0 4
    0.000000e+00   5   0 1 4
    9.272737e-17   5   0 0 5

    0.000000e+00   6   6 0 0
    0.000000e+00   6   5 1 0
    4.163336e-16   6   4 2 0
    0.000000e+00   6   3 3 0
    4.163336e-16   6   2 4 0
    0.000000e+00   6   1 5 0
    1.942890e-16   6   0 6 0
    0.000000e+00   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    0.000000e+00   6   0 5 1
    4.163336e-16   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    4.163336e-16   6   0 4 2
    0.000000e+00   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    0.000000e+00   6   0 3 3
    4.163336e-16   6   2 0 4
    0.000000e+00   6   1 1 4
    4.163336e-16   6   0 2 4
    0.000000e+00   6   1 0 5
    0.000000e+00   6   0 1 5
    0.000000e+00   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    1.354949e-17   1   1 0
    1.354949e-17   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    1.738955e-18   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.738955e-18   3   0 3

    1.387779e-16   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    1.387779e-16   4   0 4

    1.091202e-17   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    1.091202e-17   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 21

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    5.551115e-17   1   1 0
    9.482840e-17   1   0 1

    1.665335e-16   2   2 0
    0.000000e+00   2   1 1
    1.665335e-16   2   0 2

    2.775558e-17   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    3.829467e-17   3   0 3

    1.387779e-16   4   4 0
    0.000000e+00   4   3 1
    4.996004e-16   4   2 2
    0.000000e+00   4   1 3
    0.000000e+00   4   0 4

    2.775558e-17   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    5.353901e-17   5   0 5

    0.000000e+00   6   6 0
    0.000000e+00   6   5 1
    4.163336e-16   6   4 2
    0.000000e+00   6   3 3
    4.163336e-16   6   2 4
    0.000000e+00   6   1 5
    0.000000e+00   6   0 6

    6.938894e-18   7   7 0
    0.000000e+00   7   6 1
    0.000000e+00   7   5 2
    0.000000e+00   7   4 3
    0.000000e+00   7   3 4
    0.000000e+00   7   2 5
    0.000000e+00   7   1 6
    7.359790e-18   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 73

      Error      Total   Monomial
                 Degree  Exponents

    1.110223e-16   0   0 0

    2.775558e-17   1   1 0
    1.336647e-16   1   0 1

    0.000000e+00   2   2 0
    0.000000e+00   2   1 1
    0.000000e+00   2   0 2

    5.551115e-17   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    2.931548e-17   3   0 3

    1.387779e-16   4   4 0
    2.775558e-17   4   3 1
    0.000000e+00   4   2 2
    1.387779e-17   4   1 3
    0.000000e+00   4   0 4

    1.387779e-17   5   5 0
    2.775558e-17   5   4 1
    0.000000e+00   5   3 2
    1.387779e-17   5   2 3
    0.000000e+00   5   1 4
    1.677038e-16   5   0 5

    0.000000e+00   6   6 0
    0.000000e+00   6   5 1
    0.000000e+00   6   4 2
    1.387779e-17   6   3 3
    0.000000e+00   6   2 4
    1.387779e-17   6   1 5
    1.942890e-16   6   0 6

    3.469447e-17   7   7 0
    2.775558e-17   7   6 1
    1.387779e-17   7   5 2
    0.000000e+00   7   4 3
    0.000000e+00   7   3 4
    0.000000e+00   7   2 5
    6.938894e-18   7   1 6
    1.415217e-17   7   0 7

    1.249001e-16   8   8 0
    6.938894e-18   8   7 1
    0.000000e+00   8   6 2
    5.204170e-18   8   5 3
    0.000000e+00   8   4 4
    0.000000e+00   8   3 5
    0.000000e+00   8   2 6
    6.938894e-18   8   1 7
    0.000000e+00   8   0 8

    1.387779e-17   9   9 0
    1.387779e-17   9   8 1
    3.469447e-18   9   7 2
    6.938894e-18   9   6 3
    1.387779e-17   9   5 4
    6.938894e-18   9   4 5
    3.469447e-18   9   3 6
    6.938894e-18   9   2 7
    3.469447e-18   9   1 8
    1.301467e-17   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    2.709898e-17   1   1 0 0
    2.709898e-17   1   0 1 0
    2.709898e-17   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.665335e-16   2   0 0 2

    3.477909e-18   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    3.477909e-18   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    3.477909e-18   3   0 0 3

    1.387779e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    1.387779e-16   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    1.387779e-16   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  5
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 37

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    2.220446e-16   1   1 0 0
    2.184500e-16   1   0 1 0
    1.896568e-16   1   0 0 1

    1.665335e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.665335e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    1.041691e-17   2   0 1 1
    0.000000e+00   2   0 0 2

    1.110223e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    1.823321e-16   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    5.446332e-18   3   0 2 1
    0.000000e+00   3   1 0 2
    5.446332e-18   3   0 1 2
    1.454553e-16   3   0 0 3

    0.000000e+00   4   4 0 0
    0.000000e+00   4   3 1 0
    4.996004e-16   4   2 2 0
    0.000000e+00   4   1 3 0
    0.000000e+00   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    1.049915e-17   4   0 3 1
    4.996004e-16   4   2 0 2
    0.000000e+00   4   1 1 2
    4.996004e-16   4   0 2 2
    0.000000e+00   4   1 0 3
    1.049915e-17   4   0 1 3
    0.000000e+00   4   0 0 4

    0.000000e+00   5   5 0 0
    0.000000e+00   5   4 1 0
    0.000000e+00   5   3 2 0
    0.000000e+00   5   2 3 0
    0.000000e+00   5   1 4 0
    1.697426e-17   5   0 5 0
    0.000000e+00   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    1.078132e-17   5   0 4 1
    0.000000e+00   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    1.046369e-17   5   0 3 2
    0.000000e+00   5   2 0 3
    0.000000e+00   5   1 1 3
    1.046369e-17   5   0 2 3
    0.000000e+00   5   1 0 4
    1.078132e-17   5   0 1 4
    3.944280e-18   5   0 0 5

    0.000000e+00   6   6 0 0
    0.000000e+00   6   5 1 0
    4.163336e-16   6   4 2 0
    0.000000e+00   6   3 3 0
    4.163336e-16   6   2 4 0
    0.000000e+00   6   1 5 0
    1.942890e-16   6   0 6 0
    0.000000e+00   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    6.299488e-18   6   0 5 1
    4.163336e-16   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    4.163336e-16   6   0 4 2
    0.000000e+00   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    6.299488e-18   6   0 3 3
    4.163336e-16   6   2 0 4
    0.000000e+00   6   1 1 4
    4.163336e-16   6   0 2 4
    0.000000e+00   6   1 0 5
    6.299488e-18   6   0 1 5
    1.942890e-16   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    2.827160e-16   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    1.000000e+00   2   2 0
    0.000000e+00   2   1 1
    1.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    0.000000e+00   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 5

      Error      Total   Monomial
                 Degree  Exponents

    4.240740e-16   0   0 0

    1.689206e-17   1   1 0
    1.689206e-17   1   0 1

    1.413580e-16   2   2 0
    0.000000e+00   2   1 1
    1.413580e-16   2   0 2

    2.009811e-17   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    2.009811e-17   3   0 3

    1.884773e-16   4   4 0
    0.000000e+00   4   3 1
    1.000000e+00   4   2 2
    0.000000e+00   4   1 3
    1.884773e-16   4   0 4

    7.517835e-17   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    7.517835e-17   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 21

      Error      Total   Monomial
                 Degree  Exponents

    1.413580e-16   0   0 0

    0.000000e+00   1   1 0
    2.967300e-17   1   0 1

    2.827160e-16   2   2 0
    0.000000e+00   2   1 1
    2.827160e-16   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.932786e-17   3   0 3

    0.000000e+00   4   4 0
    0.000000e+00   4   3 1
    1.413580e-16   4   2 2
    0.000000e+00   4   1 3
    0.000000e+00   4   0 4

    2.775558e-17   5   5 0
    0.000000e+00   5   4 1
    0.000000e+00   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    4.275974e-16   5   0 5

    1.507819e-16   6   6 0
    0.000000e+00   6   5 1
    3.769546e-16   6   4 2
    0.000000e+00   6   3 3
    3.769546e-16   6   2 4
    0.000000e+00   6   1 5
    3.015637e-16   6   0 6

    0.000000e+00   7   7 0
    0.000000e+00   7   6 1
    0.000000e+00   7   5 2
    0.000000e+00   7   4 3
    0.000000e+00   7   3 4
    0.000000e+00   7   2 5
    0.000000e+00   7   1 6
    7.329911e-16   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 73

      Error      Total   Monomial
                 Degree  Exponents

    1.413580e-16   0   0 0

    1.110223e-16   1   1 0
    1.069098e-16   1   0 1

    1.413580e-16   2   2 0
    0.000000e+00   2   1 1
    0.000000e+00   2   0 2

    2.220446e-16   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    2.391456e-16   3   0 3

    3.769546e-16   4   4 0
    0.000000e+00   4   3 1
    1.413580e-16   4   2 2
    5.551115e-17   4   1 3
    3.769546e-16   4   0 4

    3.330669e-16   5   5 0
    0.000000e+00   5   4 1
    2.775558e-17   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    3.331287e-16   5   0 5

    1.507819e-16   6   6 0
    0.000000e+00   6   5 1
    0.000000e+00   6   4 2
    0.000000e+00   6   3 3
    0.000000e+00   6   2 4
    0.000000e+00   6   1 5
    1.507819e-16   6   0 6

    1.110223e-16   7   7 0
    0.000000e+00   7   6 1
    1.110223e-16   7   5 2
    0.000000e+00   7   4 3
    1.110223e-16   7   3 4
    1.110223e-16   7   2 5
    1.110223e-16   7   1 6
    9.946170e-17   7   0 7

    5.169663e-16   8   8 0
    2.220446e-16   8   7 1
    0.000000e+00   8   6 2
    0.000000e+00   8   5 3
    3.769546e-16   8   4 4
    0.000000e+00   8   3 5
    1.507819e-16   8   2 6
    5.551115e-17   8   1 7
    3.446442e-16   8   0 8

    8.881784e-16   9   9 0
    1.110223e-16   9   8 1
    4.440892e-16   9   7 2
    2.220446e-16   9   6 3
    2.220446e-16   9   5 4
    4.440892e-16   9   4 5
    2.220446e-16   9   3 6
    0.000000e+00   9   2 7
    3.330669e-16   9   1 8
    2.195943e-15   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    4.785162e-16   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    1.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    1.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    1.000000e+00   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    3.190108e-16   0   0 0 0

    5.288969e-17   1   1 0 0
    5.288969e-17   1   0 1 0
    5.288969e-17   1   0 0 1

    3.190108e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    3.190108e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    3.190108e-16   2   0 0 2

    4.766284e-17   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    4.766284e-17   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    4.766284e-17   3   0 0 3

    2.126739e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    1.000000e+00   4   2 2 0
    0.000000e+00   4   1 3 0
    2.126739e-16   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    0.000000e+00   4   0 3 1
    1.000000e+00   4   2 0 2
    0.000000e+00   4   1 1 2
    1.000000e+00   4   0 2 2
    0.000000e+00   4   1 0 3
    0.000000e+00   4   0 1 3
    0.000000e+00   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  6
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 37

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    1.681759e-16   1   0 1 0
    6.839080e-17   1   0 0 1

    3.190108e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.595054e-16   2   0 2 0
    0.000000e+00   2   1 0 1
    7.288441e-18   2   0 1 1
    3.190108e-16   2   0 0 2

    2.220446e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    1.200752e-16   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    9.052943e-18   3   0 2 1
    0.000000e+00   3   1 0 2
    9.052943e-18   3   0 1 2
    7.208435e-17   3   0 0 3

    2.126739e-16   4   4 0 0
    0.000000e+00   4   3 1 0
    1.595054e-16   4   2 2 0
    0.000000e+00   4   1 3 0
    0.000000e+00   4   0 4 0
    0.000000e+00   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    5.540704e-18   4   0 3 1
    1.595054e-16   4   2 0 2
    0.000000e+00   4   1 1 2
    3.190108e-16   4   0 2 2
    0.000000e+00   4   1 0 3
    5.540704e-18   4   0 1 3
    0.000000e+00   4   0 0 4

    0.000000e+00   5   5 0 0
    0.000000e+00   5   4 1 0
    0.000000e+00   5   3 2 0
    0.000000e+00   5   2 3 0
    0.000000e+00   5   1 4 0
    2.675811e-17   5   0 5 0
    0.000000e+00   5   4 0 1
    0.000000e+00   5   3 1 1
    0.000000e+00   5   2 2 1
    0.000000e+00   5   1 3 1
    1.557435e-17   5   0 4 1
    0.000000e+00   5   3 0 2
    0.000000e+00   5   2 1 2
    0.000000e+00   5   1 2 2
    2.675811e-17   5   0 3 2
    0.000000e+00   5   2 0 3
    0.000000e+00   5   1 1 3
    2.675811e-17   5   0 2 3
    0.000000e+00   5   1 0 4
    1.557435e-17   5   0 1 4
    1.489618e-16   5   0 0 5

    3.402782e-16   6   6 0 0
    0.000000e+00   6   5 1 0
    4.253478e-16   6   4 2 0
    0.000000e+00   6   3 3 0
    4.253478e-16   6   2 4 0
    0.000000e+00   6   1 5 0
    3.402782e-16   6   0 6 0
    0.000000e+00   6   5 0 1
    0.000000e+00   6   4 1 1
    0.000000e+00   6   3 2 1
    0.000000e+00   6   2 3 1
    0.000000e+00   6   1 4 1
    3.606663e-17   6   0 5 1
    4.253478e-16   6   4 0 2
    0.000000e+00   6   3 1 2
    1.000000e+00   6   2 2 2
    0.000000e+00   6   1 3 2
    4.253478e-16   6   0 4 2
    0.000000e+00   6   3 0 3
    0.000000e+00   6   2 1 3
    0.000000e+00   6   1 2 3
    3.606663e-17   6   0 3 3
    2.126739e-16   6   2 0 4
    0.000000e+00   6   1 1 4
    2.126739e-16   6   0 2 4
    0.000000e+00   6   1 0 5
    3.606663e-17   6   0 1 5
    3.402782e-16   6   0 0 6


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    3
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    5.000000e-01   2   2 0
    0.000000e+00   2   1 1
    5.000000e-01   2   0 2

    8.333333e-01   3   3 0
    5.000000e-01   3   2 1
    5.000000e-01   3   1 2
    8.333333e-01   3   0 3


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    5
  Unique points in the grid = 7

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    0.000000e+00   1   0 1

    0.000000e+00   2   2 0
    0.000000e+00   2   1 1
    0.000000e+00   2   0 2

    1.480297e-16   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.480297e-16   3   0 3

    1.480297e-16   4   4 0
    1.480297e-16   4   3 1
    2.500000e-01   4   2 2
    1.480297e-16   4   1 3
    1.480297e-16   4   0 4

    1.184238e-16   5   5 0
    1.480297e-16   5   4 1
    4.166667e-01   5   3 2
    4.166667e-01   5   2 3
    1.480297e-16   5   1 4
    1.184238e-16   5   0 5


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 1
  LEVEL_MAX =                 2
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    7
  Unique points in the grid = 29

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    1.110223e-16   1   1 0
    1.110223e-16   1   0 1

    2.220446e-16   2   2 0
    2.220446e-16   2   1 1
    0.000000e+00   2   0 2

    0.000000e+00   3   3 0
    0.000000e+00   3   2 1
    0.000000e+00   3   1 2
    1.480297e-16   3   0 3

    1.480297e-16   4   4 0
    4.440892e-16   4   3 1
    0.000000e+00   4   2 2
    0.000000e+00   4   1 3
    0.000000e+00   4   0 4

    2.368476e-16   5   5 0
    2.960595e-16   5   4 1
    1.480297e-16   5   3 2
    0.000000e+00   5   2 3
    0.000000e+00   5   1 4
    1.184238e-16   5   0 5

    1.578984e-16   6   6 0
    2.368476e-16   6   5 1
    0.000000e+00   6   4 2
    1.973730e-16   6   3 3
    0.000000e+00   6   2 4
    1.184238e-16   6   1 5
    0.000000e+00   6   0 6

    3.609106e-16   7   7 0
    3.157968e-16   7   6 1
    1.184238e-16   7   5 2
    3.947460e-16   7   4 3
    3.947460e-16   7   3 4
    1.184238e-16   7   2 5
    1.578984e-16   7   1 6
    1.804553e-16   7   0 7


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   7

  Spatial dimension DIM_NUM = 2
  LEVEL_MIN =                 2
  LEVEL_MAX =                 3
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    9
  Unique points in the grid = 95

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0

    0.000000e+00   1   1 0
    2.220446e-16   1   0 1

    0.000000e+00   2   2 0
    1.110223e-16   2   1 1
    0.000000e+00   2   0 2

    2.960595e-16   3   3 0
    2.220446e-16   3   2 1
    1.110223e-16   3   1 2
    1.480297e-16   3   0 3

    4.440892e-16   4   4 0
    4.440892e-16   4   3 1
    1.110223e-16   4   2 2
    1.480297e-16   4   1 3
    0.000000e+00   4   0 4

    3.552714e-16   5   5 0
    0.000000e+00   5   4 1
    1.480297e-16   5   3 2
    1.480297e-16   5   2 3
    0.000000e+00   5   1 4
    3.552714e-16   5   0 5

    7.894919e-16   6   6 0
    2.368476e-16   6   5 1
    1.480297e-16   6   4 2
    1.973730e-16   6   3 3
    0.000000e+00   6   2 4
    1.184238e-16   6   1 5
    1.578984e-16   6   0 6

    5.413659e-16   7   7 0
    4.736952e-16   7   6 1
    4.736952e-16   7   5 2
    3.947460e-16   7   4 3
    0.000000e+00   7   3 4
    1.184238e-16   7   2 5
    3.157968e-16   7   1 6
    0.000000e+00   7   0 7

    3.609106e-16   8   8 0
    0.000000e+00   8   7 1
    6.315935e-16   8   6 2
    1.578984e-16   8   5 3
    1.973730e-16   8   4 4
    0.000000e+00   8   3 5
    1.578984e-16   8   2 6
    3.609106e-16   8   1 7
    3.609106e-16   8   0 8

    0.000000e+00   9   9 0
    5.413659e-16   9   8 1
    0.000000e+00   9   7 2
    0.000000e+00   9   6 3
    1.578984e-16   9   5 4
    1.578984e-16   9   4 5
    2.105312e-16   9   3 6
    1.804553e-16   9   2 7
    1.804553e-16   9   1 8
    1.604047e-16   9   0 9


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   1

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 0
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    2
  Unique points in the grid = 1

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    5.000000e-01   2   2 0 0
    0.000000e+00   2   1 1 0
    5.000000e-01   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    5.000000e-01   2   0 0 2


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   3

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 1
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    4
  Unique points in the grid = 10

      Error      Total   Monomial
                 Degree  Exponents

    0.000000e+00   0   0 0 0

    0.000000e+00   1   1 0 0
    0.000000e+00   1   0 1 0
    0.000000e+00   1   0 0 1

    0.000000e+00   2   2 0 0
    0.000000e+00   2   1 1 0
    0.000000e+00   2   0 2 0
    0.000000e+00   2   1 0 1
    0.000000e+00   2   0 1 1
    0.000000e+00   2   0 0 2

    1.480297e-16   3   3 0 0
    0.000000e+00   3   2 1 0
    0.000000e+00   3   1 2 0
    1.480297e-16   3   0 3 0
    0.000000e+00   3   2 0 1
    0.000000e+00   3   1 1 1
    0.000000e+00   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    1.480297e-16   3   0 0 3

    1.480297e-16   4   4 0 0
    1.480297e-16   4   3 1 0
    2.500000e-01   4   2 2 0
    1.480297e-16   4   1 3 0
    1.480297e-16   4   0 4 0
    1.480297e-16   4   3 0 1
    0.000000e+00   4   2 1 1
    0.000000e+00   4   1 2 1
    1.480297e-16   4   0 3 1
    2.500000e-01   4   2 0 2
    0.000000e+00   4   1 1 2
    2.500000e-01   4   0 2 2
    1.480297e-16   4   1 0 3
    1.480297e-16   4   0 1 3
    1.480297e-16   4   0 0 4


SPARSE_GRID_MONOMIAL_TEST
  Check the exactness of a sparse grid quadrature rule,
  applied to all monomials of orders 0 to DEGREE_MAX.

  For cases where the dimension is greater than 1,
  many sparse grid of this level have accuracy through
  monomials of total degree   5

  Spatial dimension DIM_NUM = 3
  LEVEL_MIN =                 0
  LEVEL_MAX =                 2
  1D quadrature index RULE =  7
  Check up to DEGREE_MAX =    6
  Unique points in the grid = 58

      Error      Total   Monomial
                 Degree  Exponents

    9.992007e-16   0   0 0 0

    1.110223e-16   1   1 0 0
    0.000000e+00   1   0 1 0
    9.992007e-16   1   0 0 1

    2.220446e-16   2   2 0 0
    0.000000e+00   2   1 1 0
    1.110223e-16   2   0 2 0
    9.992007e-16   2   1 0 1
    6.661338e-16   2   0 1 1
    4.440892e-16   2   0 0 2

    2.960595e-16   3   3 0 0
    1.110223e-16   3   2 1 0
    0.000000e+00   3   1 2 0
    1.480297e-16   3   0 3 0
    4.440892e-16   3   2 0 1
    3.330669e-16   3   1 1 1
    2.220446e-16   3   0 2 1
    0.000000e+00   3   1 0 2
    0.000000e+00   3   0 1 2
    1.480297e-16   3   0 0 3

    1.480297e-16   4   4 0 0
    2.960595e-16   4   3 1 0
    2.220446e-16   4   2 2 0
    1.480297e-16   4   1 3 0
    1.480297e-16   4   0 4 0
    2.960595e-16   4   3 0 1
    2.220446e-16   4   2 1 1
    1.110223e-16   4   1 2 1
    1.480297e-16   4   0 3 1
    2.220446e-16   4   2 0 2
    4.440892e-16   4   1 1 2
    2.220446e-16   4   0 2 2
    1.480297e-16   4   1 0 3
    0.000000e+00   4   0 1 3
    0.000000e+00   4   0 0 4

    1.184238e-16   5   5 0 0
    1.480297e-16   5   4 1 0
    2.960595e-16   5   3 2 0
    0.000000e+00   5   2 3 0
    1.480297e-16   5   1 4 0
    1.184238e-16   5   0 5 0
    0.000000e+00   5   4 0 1
    1.480297e-16   5   3 1 1
    4.440892e-16   5   2 2 1
    1.480297e-16   5   1 3 1
    1.480297e-16   5   0 4 1
    1.480297e-16   5   3 0 2
    2.220446e-16   5   2 1 2
    0.000000e+00   5   1 2 2
    1.480297e-16   5   0 3 2
    0.000000e+00   5   2 0 3
    4.440892e-16   5   1 1 3
    0.000000e+00   5   0 2 3
    0.000000e+00   5   1 0 4
    0.000000e+00   5   0 1 4
    0.000000e+00   5   0 0 5

    3.157968e-16   6   6 0 0
    1.184238e-16   6   5 1 0
    1.480297e-16   6   4 2 0
    1.973730e-16   6   3 3 0
    0.000000e+00   6   2 4 0
    2.368476e-16   6   1 5 0
    1.578984e-16   6   0 6 0
    1.184238e-16   6   5 0 1
    2.960595e-16   6   4 1 1
    0.000000e+00   6   3 2 1
    1.480297e-16   6   2 3 1
    0.000000e+00   6   1 4 1
    4.736952e-16   6   0 5 1
    1.480297e-16   6   4 0 2
    0.000000e+00   6   3 1 2
    1.250000e-01   6   2 2 2
    1.480297e-16   6   1 3 2
    2.960595e-16   6   0 4 2
    1.973730e-16   6   3 0 3
    2.960595e-16   6   2 1 3
    1.480297e-16   6   1 2 3
    1.973730e-16   6   0 3 3
    2.960595e-16   6   2 0 4
    2.960595e-16   6   1 1 4
    0.000000e+00   6   0 2 4
    2.368476e-16   6   1 0 5
    1.184238e-16   6   0 1 5
    3.157968e-16   6   0 0 6


SANDIA_SPARSE_TEST
  Normal end of execution.

18-Apr-2009 10:50:39
>> 
