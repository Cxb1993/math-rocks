>> sgmga_vcn_timing_tests
25-Apr-2011 16:36:18

SGMGA_VCN_TIMING_TESTS
  calls SGMGA_VCN_TIMING_TEST.

SGMGA_VCN_TIMING_TEST
  Consider vectors 0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which Q_MIN < Q <= Q_MAX
  No ordering is imposed on the LEVEL_1D values.
  SGMGA_VCN_NAIVE uses a naive approach;
  SGMGA_VCN tries to be more efficient.
  Here, we just compare the results.

  IMPORTANCE:
        1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:
        1.000000        1.000000        1.000000        1.000000

  SGMGA_VCN_NAIVE:
     I          Q        X
   MIN       -2.000000   0   0   0   0
   MAX        2.000000   2   2   2   2
  TIME        0.001466

  SGMGA_VCN:
     I          Q        X
   MIN       -2.000000   0   0   0   0
   MAX        2.000000   2   2   2   2
  TIME        0.001858

SGMGA_VCN_TIMING_TEST
  Consider vectors 0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which Q_MIN < Q <= Q_MAX
  No ordering is imposed on the LEVEL_1D values.
  SGMGA_VCN_NAIVE uses a naive approach;
  SGMGA_VCN tries to be more efficient.
  Here, we just compare the results.

  IMPORTANCE:
        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:
        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000        1.000000

  SGMGA_VCN_NAIVE:
     I          Q        X
   MIN       -6.000000   0   0   0   0   0   0   0   0
   MAX        2.000000   2   2   2   2   2   2   2   2
  TIME        0.047350

  SGMGA_VCN:
     I          Q        X
   MIN       -6.000000   0   0   0   0   0   0   0   0
   MAX        2.000000   2   2   2   2   2   2   2   2
  TIME        0.004531

SGMGA_VCN_TIMING_TEST
  Consider vectors 0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which Q_MIN < Q <= Q_MAX
  No ordering is imposed on the LEVEL_1D values.
  SGMGA_VCN_NAIVE uses a naive approach;
  SGMGA_VCN tries to be more efficient.
  Here, we just compare the results.

  IMPORTANCE:
        1.000000        2.000000        3.000000
  LEVEL_WEIGHT:
        1.000000        0.500000        0.333333

  SGMGA_VCN_NAIVE:
     I          Q        X
   MIN        0.166667   0   0   0
   MAX        2.000000   2   4   6
  TIME        0.001261

  SGMGA_VCN:
     I          Q        X
   MIN        0.166667   0   0   0
   MAX        2.000000   2   4   6
  TIME        0.002193

SGMGA_VCN_TIMING_TEST
  Consider vectors 0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which Q_MIN < Q <= Q_MAX
  No ordering is imposed on the LEVEL_1D values.
  SGMGA_VCN_NAIVE uses a naive approach;
  SGMGA_VCN tries to be more efficient.
  Here, we just compare the results.

  IMPORTANCE:
        1.000000        2.000000        3.000000        4.000000        5.000000
  LEVEL_WEIGHT:
        1.000000        0.500000        0.333333        0.250000        0.200000

  SGMGA_VCN_NAIVE:
     I          Q        X
   MIN       -0.283333   0   0   0   0   0
   MAX        2.000000   2   4   6   8  10
  TIME        0.075617

  SGMGA_VCN:
     I          Q        X
   MIN       -0.283333   0   0   0   0   0
   MAX        2.000000   2   4   6   8  10
  TIME        0.023625

SGMGA_VCN_TIMING_TESTS:
  Normal end of execution.

25-Apr-2011 16:36:18
>> 
